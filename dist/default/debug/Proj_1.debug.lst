

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Tue Jul 11 01:26:33 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,inline
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,inline
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,inline
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 23/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4620 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   001820                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _lat_registers
    86   001820  89                 	db	137
    87   001821  0F                 	db	15
    88   001822  8A                 	db	138
    89   001823  0F                 	db	15
    90   001824  8B                 	db	139
    91   001825  0F                 	db	15
    92   001826  8C                 	db	140
    93   001827  0F                 	db	15
    94   001828  8D                 	db	141
    95   001829  0F                 	db	15
    96                           
    97                           ;initializer for _tris_registers
    98   00182A  92                 	db	146
    99   00182B  0F                 	db	15
   100   00182C  93                 	db	147
   101   00182D  0F                 	db	15
   102   00182E  94                 	db	148
   103   00182F  0F                 	db	15
   104   001830  95                 	db	149
   105   001831  0F                 	db	15
   106   001832  96                 	db	150
   107   001833  0F                 	db	15
   108                           
   109                           ;initializer for _btn_low_state
   110   001834  01                 	db	1
   111                           
   112                           ;initializer for _btn_high_state
   113   001835  01                 	db	1
   114                           
   115                           ;initializer for _relay_1
   116   001836  43                 	db	67
   117                           
   118                           ;initializer for _led_2
   119   001837  92                 	db	146
   120                           
   121                           ;initializer for _led_1
   122   001838  02                 	db	2
   123                           
   124                           ;initializer for _btn_low
   125   001839  CB                 	db	203
   126                           
   127                           ;initializer for _btn_high
   128   00183A  43                 	db	67
   129                           
   130                           ;initializer for _RB7_Flag
   131   00183B  01                 	db	1
   132                           
   133                           ;initializer for _RB6_Flag
   134   00183C  01                 	db	1
   135                           
   136                           ;initializer for _RB5_Flag
   137   00183D  01                 	db	1
   138                           
   139                           ;initializer for _RB4_Flag
   140   00183E  01                 	db	1
   141                           
   142                           ;initializer for _adc_1
   143   00183F  00                 	db	0
   144   001840  00                 	db	0
   145   001841  05                 	db	5
   146   001842  05                 	db	5
   147   001843  00                 	db	0
   148   001844  02                 	db	2
   149                           
   150                           	psect	idataBANK0
   151   00186A                     __pidataBANK0:
   152                           	callstack 0
   153                           
   154                           ;initializer for _lcd_2
   155   00186A  32                 	db	50
   156   00186B  3A                 	db	58
   157   00186C  03                 	db	3
   158   00186D  0B                 	db	11
   159   00186E  13                 	db	19
   160   00186F  1B                 	db	27
   161   001870  23                 	db	35
   162   001871  2B                 	db	43
   163   001872  33                 	db	51
   164   001873  3B                 	db	59
   165                           
   166                           ;initializer for _port_registers
   167   001874  80                 	db	128
   168   001875  0F                 	db	15
   169   001876  81                 	db	129
   170   001877  0F                 	db	15
   171   001878  82                 	db	130
   172   001879  0F                 	db	15
   173   00187A  83                 	db	131
   174   00187B  0F                 	db	15
   175   00187C  84                 	db	132
   176   00187D  0F                 	db	15
   177                           
   178                           ;initializer for _lcd_1
   179   00187E  02                 	db	2
   180   00187F  0A                 	db	10
   181   001880  12                 	db	18
   182   001881  1A                 	db	26
   183   001882  22                 	db	34
   184   001883  2A                 	db	42
   185   000000                     _SSPADD	set	4040
   186   000000                     _SSPBUF	set	4041
   187   000000                     _SSPSTATbits	set	4039
   188   000000                     _SSPCON2bits	set	4037
   189   000000                     _SSPCON1bits	set	4038
   190   000000                     _SPBRGH	set	4016
   191   000000                     _SPBRG	set	4015
   192   000000                     _TXREG	set	4013
   193   000000                     _TXSTAbits	set	4012
   194   000000                     _RCREG	set	4014
   195   000000                     _RCSTAbits	set	4011
   196   000000                     _TMR3L	set	4018
   197   000000                     _TMR3H	set	4019
   198   000000                     _T3CONbits	set	4017
   199   000000                     _T2CONbits	set	4042
   200   000000                     _TMR1L	set	4046
   201   000000                     _TMR1H	set	4047
   202   000000                     _T1CONbits	set	4045
   203   000000                     _TMR0L	set	4054
   204   000000                     _TMR0H	set	4055
   205   000000                     _T0CONbits	set	4053
   206   000000                     _INTCON2bits	set	4081
   207   000000                     _INTCON3bits	set	4080
   208   000000                     _EECON2	set	4007
   209   000000                     _ADCON1bits	set	4033
   210   000000                     _ADRESL	set	4035
   211   000000                     _ADRESH	set	4036
   212   000000                     _INTCONbits	set	4082
   213   000000                     _TRISD	set	3989
   214   000000                     _TRISC	set	3988
   215   000000                     _TRISB	set	3987
   216   000000                     _TRISE	set	3990
   217                           
   218                           	psect	nvCOMRAM
   219   00007D                     __pnvCOMRAM:
   220                           	callstack 0
   221   00007D                     _flag:
   222                           	callstack 0
   223   00007D                     	ds	1
   224   000000                     _TRISCbits	set	3988
   225   000000                     _PORTBbits	set	3969
   226   000000                     _RC6	set	31766
   227   000000                     _RC7	set	31767
   228   000000                     _PIE1bits	set	3997
   229   000000                     _ADCON2bits	set	4032
   230   000000                     _ADCON0bits	set	4034
   231   000000                     _PORTE	set	3972
   232   000000                     _PORTD	set	3971
   233   000000                     _PORTC	set	3970
   234   000000                     _PORTB	set	3969
   235   000000                     _PORTA	set	3968
   236   000000                     _LATA	set	3977
   237   000000                     _TRISA	set	3986
   238   000000                     _PIE2bits	set	4000
   239   000000                     _EECON1bits	set	4006
   240   000000                     _EEDATA	set	4008
   241   000000                     _EEADR	set	4009
   242   000000                     _EEADRH	set	4010
   243   000000                     _PIR1bits	set	3998
   244   000000                     _LATE	set	3981
   245   000000                     _LATD	set	3980
   246   000000                     _LATC	set	3979
   247   000000                     _LATB	set	3978
   248   000000                     _PIR2bits	set	4001
   249   000000                     _TMR2	set	4044
   250   000000                     _BAUDCONbits	set	4024
   251                           
   252                           	psect	smallconst
   253   001000                     __psmallconst:
   254                           	callstack 0
   255   001000  00                 	db	0
   256   001001                     STR_1:
   257   001001  25                 	db	37
   258   001002  69                 	db	105	;'i'
   259   001003  00                 	db	0
   260   001004  00                 	db	0	; dummy byte at the end
   261   000000                     
   262                           ; #config settings
   263                           
   264                           	psect	cinit
   265   001702                     __pcinit:
   266                           	callstack 0
   267   001702                     start_initialization:
   268                           	callstack 0
   269   001702                     __initialization:
   270                           	callstack 0
   271                           
   272                           ; Initialize objects allocated to BANK0 (26 bytes)
   273                           ; load TBLPTR registers with __pidataBANK0
   274   001702  0E6A               	movlw	low __pidataBANK0
   275   001704  6EF6               	movwf	tblptrl,c
   276   001706  0E18               	movlw	high __pidataBANK0
   277   001708  6EF7               	movwf	tblptrh,c
   278   00170A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   279   00170C  6EF8               	movwf	tblptru,c
   280   00170E  EE00  F080         	lfsr	0,__pdataBANK0
   281   001712  EE10 F01A          	lfsr	1,26
   282   001716                     copy_data0:
   283   001716  0009               	tblrd		*+
   284   001718  CFF5 FFEE          	movff	tablat,postinc0
   285   00171C  50E5               	movf	postdec1,w,c
   286   00171E  50E1               	movf	fsr1l,w,c
   287   001720  E1FA               	bnz	copy_data0
   288                           
   289                           ; Initialize objects allocated to COMRAM (37 bytes)
   290                           ; load TBLPTR registers with __pidataCOMRAM
   291   001722  0E20               	movlw	low __pidataCOMRAM
   292   001724  6EF6               	movwf	tblptrl,c
   293   001726  0E18               	movlw	high __pidataCOMRAM
   294   001728  6EF7               	movwf	tblptrh,c
   295   00172A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   296   00172C  6EF8               	movwf	tblptru,c
   297   00172E  EE00  F049         	lfsr	0,__pdataCOMRAM
   298   001732  EE10 F025          	lfsr	1,37
   299   001736                     copy_data1:
   300   001736  0009               	tblrd		*+
   301   001738  CFF5 FFEE          	movff	tablat,postinc0
   302   00173C  50E5               	movf	postdec1,w,c
   303   00173E  50E1               	movf	fsr1l,w,c
   304   001740  E1FA               	bnz	copy_data1
   305                           
   306                           ; Clear objects allocated to COMRAM (72 bytes)
   307   001742  EE00  F001         	lfsr	0,__pbssCOMRAM
   308   001746  0E48               	movlw	72
   309   001748                     clear_0:
   310   001748  6AEE               	clrf	postinc0,c
   311   00174A  06E8               	decf	wreg,f,c
   312   00174C  E1FD               	bnz	clear_0
   313   00174E                     end_of_initialization:
   314                           	callstack 0
   315   00174E                     __end_of__initialization:
   316                           	callstack 0
   317   00174E  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   318   001750  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   319   001752  0100               	movlb	0
   320   001754  EF04  F00B         	goto	_main	;jump to C main() function
   321                           
   322                           	psect	bssCOMRAM
   323   000001                     __pbssCOMRAM:
   324                           	callstack 0
   325   000001                     _I2C_Report_Receive_Overflow:
   326                           	callstack 0
   327   000001                     	ds	2
   328   000003                     _I2C_DefaultInterruptHandler:
   329                           	callstack 0
   330   000003                     	ds	2
   331   000005                     _I2C_Report_Write_Collision:
   332                           	callstack 0
   333   000005                     	ds	2
   334   000007                     _EUSART_OverrunErrorHandler:
   335                           	callstack 0
   336   000007                     	ds	2
   337   000009                     _EUSART_FramingErrorHandler:
   338                           	callstack 0
   339   000009                     	ds	2
   340   00000B                     _EUSART_RX_Interrupt_Handeler:
   341                           	callstack 0
   342   00000B                     	ds	2
   343   00000D                     _EUSART_TX_Interrupt_Handeler:
   344                           	callstack 0
   345   00000D                     	ds	2
   346   00000F                     _timer3_preload:
   347                           	callstack 0
   348   00000F                     	ds	2
   349   000011                     _TMR3_Interrupt_Handeler:
   350                           	callstack 0
   351   000011                     	ds	2
   352   000013                     _TMR2_Interrupt_Handeler:
   353                           	callstack 0
   354   000013                     	ds	2
   355   000015                     _timer1_preload:
   356                           	callstack 0
   357   000015                     	ds	2
   358   000017                     _TMR1_Interrupt_Handeler:
   359                           	callstack 0
   360   000017                     	ds	2
   361   000019                     _timer0_preload:
   362                           	callstack 0
   363   000019                     	ds	2
   364   00001B                     _TMR0_Interrupt_Handeler:
   365                           	callstack 0
   366   00001B                     	ds	2
   367   00001D                     _RB7_Interrupt_Handeler_Low:
   368                           	callstack 0
   369   00001D                     	ds	2
   370   00001F                     _RB7_Interrupt_Handeler_High:
   371                           	callstack 0
   372   00001F                     	ds	2
   373   000021                     _RB6_Interrupt_Handeler_Low:
   374                           	callstack 0
   375   000021                     	ds	2
   376   000023                     _RB6_Interrupt_Handeler_High:
   377                           	callstack 0
   378   000023                     	ds	2
   379   000025                     _RB5_Interrupt_Handeler_Low:
   380                           	callstack 0
   381   000025                     	ds	2
   382   000027                     _RB5_Interrupt_Handeler_High:
   383                           	callstack 0
   384   000027                     	ds	2
   385   000029                     _RB4_Interrupt_Handeler_Low:
   386                           	callstack 0
   387   000029                     	ds	2
   388   00002B                     _RB4_Interrupt_Handeler_High:
   389                           	callstack 0
   390   00002B                     	ds	2
   391   00002D                     _INT2_Interrupt_Handeler:
   392                           	callstack 0
   393   00002D                     	ds	2
   394   00002F                     _INT1_Interrupt_Handeler:
   395                           	callstack 0
   396   00002F                     	ds	2
   397   000031                     _INT0_Interrupt_Handeler:
   398                           	callstack 0
   399   000031                     	ds	2
   400   000033                     _ADC_Interrupt_Handeler:
   401                           	callstack 0
   402   000033                     	ds	2
   403   000035                     _ret:
   404                           	callstack 0
   405   000035                     	ds	1
   406   000036                     _timer2_preload:
   407                           	callstack 0
   408   000036                     	ds	1
   409   000037                     relay_turn_toggle@F3062:
   410                           	callstack 0
   411   000037                     	ds	1
   412   000038                     relay_turn_off@F3057:
   413                           	callstack 0
   414   000038                     	ds	1
   415   000039                     relay_turn_on@F3052:
   416                           	callstack 0
   417   000039                     	ds	1
   418   00003A                     relay_initialize@F3047:
   419                           	callstack 0
   420   00003A                     	ds	1
   421   00003B                     led_turn_toggle@F3062:
   422                           	callstack 0
   423   00003B                     	ds	1
   424   00003C                     led_turn_off@F3057:
   425                           	callstack 0
   426   00003C                     	ds	1
   427   00003D                     led_turn_on@F3052:
   428                           	callstack 0
   429   00003D                     	ds	1
   430   00003E                     led_initialize@F3047:
   431                           	callstack 0
   432   00003E                     	ds	1
   433   00003F                     button_read_state@F3056:
   434                           	callstack 0
   435   00003F                     	ds	1
   436   000040                     button_initialize@F3049:
   437                           	callstack 0
   438   000040                     	ds	1
   439   000041                     _conversion_Result_AN3:
   440                           	callstack 0
   441   000041                     	ds	2
   442   000043                     _conversion_Result_AN2:
   443                           	callstack 0
   444   000043                     	ds	2
   445   000045                     _conversion_Result_AN1:
   446                           	callstack 0
   447   000045                     	ds	2
   448   000047                     _conversion_Result_AN0:
   449                           	callstack 0
   450   000047                     	ds	2
   451                           
   452                           	psect	dataCOMRAM
   453   000049                     __pdataCOMRAM:
   454                           	callstack 0
   455   000049                     _lat_registers:
   456                           	callstack 0
   457   000049                     	ds	10
   458   000053                     _tris_registers:
   459                           	callstack 0
   460   000053                     	ds	10
   461   00005D                     _btn_low_state:
   462                           	callstack 0
   463   00005D                     	ds	1
   464   00005E                     _btn_high_state:
   465                           	callstack 0
   466   00005E                     	ds	1
   467   00005F                     _relay_1:
   468                           	callstack 0
   469   00005F                     	ds	1
   470   000060                     _led_2:
   471                           	callstack 0
   472   000060                     	ds	1
   473   000061                     _led_1:
   474                           	callstack 0
   475   000061                     	ds	1
   476   000062                     _btn_low:
   477                           	callstack 0
   478   000062                     	ds	1
   479   000063                     _btn_high:
   480                           	callstack 0
   481   000063                     	ds	1
   482   000064                     _RB7_Flag:
   483                           	callstack 0
   484   000064                     	ds	1
   485   000065                     _RB6_Flag:
   486                           	callstack 0
   487   000065                     	ds	1
   488   000066                     _RB5_Flag:
   489                           	callstack 0
   490   000066                     	ds	1
   491   000067                     _RB4_Flag:
   492                           	callstack 0
   493   000067                     	ds	1
   494   000068                     _adc_1:
   495                           	callstack 0
   496   000068                     	ds	6
   497                           
   498                           	psect	dataBANK0
   499   000080                     __pdataBANK0:
   500                           	callstack 0
   501   000080                     _lcd_2:
   502                           	callstack 0
   503   000080                     	ds	10
   504   00008A                     _port_registers:
   505                           	callstack 0
   506   00008A                     	ds	10
   507   000094                     _lcd_1:
   508                           	callstack 0
   509   000094                     	ds	6
   510                           
   511                           	psect	cstackCOMRAM
   512   00006E                     __pcstackCOMRAM:
   513                           	callstack 0
   514   00006E                     RB4_ISR@RB4_Source:
   515                           	callstack 0
   516   00006E                     RB5_ISR@RB5_Source:
   517                           	callstack 0
   518   00006E                     RB6_ISR@RB6_Source:
   519                           	callstack 0
   520   00006E                     RB7_ISR@RB7_Source:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x0
   524   00006E                     	ds	1
   525   00006F                     ??_adc_input_channel_port_configure:
   526   00006F                     ADC_StartConversion@_adc:
   527                           	callstack 0
   528   00006F                     ADC_GetConversionResult@_adc:
   529                           	callstack 0
   530   00006F                     select_result_format@_adc:
   531                           	callstack 0
   532   00006F                     configure_voltage_reference@_adc:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0x1
   536   00006F                     	ds	2
   537   000071                     ADC_StartConversion@ret:
   538                           	callstack 0
   539   000071                     adc_input_channel_port_configure@channel:
   540                           	callstack 0
   541   000071                     ADC_GetConversionResult@conversion_Result:
   542                           	callstack 0
   543                           
   544                           ; 2 bytes @ 0x3
   545   000071                     	ds	1
   546   000072                     ADC_Init@_adc:
   547                           	callstack 0
   548   000072                     ADC_SelectChannel@_adc:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x4
   552   000072                     	ds	1
   553   000073                     ??_ADC_GetConversionResult:
   554                           
   555                           ; 1 bytes @ 0x5
   556   000073                     	ds	1
   557   000074                     ??_ADC_Init:
   558   000074                     ADC_SelectChannel@channel:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x6
   562   000074                     	ds	1
   563   000075                     ??_ADC_SelectChannel:
   564   000075                     ADC_Init@ret:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x7
   568   000075                     	ds	1
   569   000076                     ADC_SelectChannel@ret:
   570                           	callstack 0
   571   000076                     ADC_GetConversionResult@ret:
   572                           	callstack 0
   573                           
   574                           ; 1 bytes @ 0x8
   575   000076                     	ds	1
   576   000077                     ADC_GetConversion_Blocking@_adc:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x9
   580   000077                     	ds	2
   581   000079                     ADC_GetConversion_Blocking@channel:
   582                           	callstack 0
   583                           
   584                           ; 1 bytes @ 0xB
   585   000079                     	ds	1
   586   00007A                     ADC_GetConversion_Blocking@conversion_Result:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0xC
   590   00007A                     	ds	2
   591   00007C                     ADC_GetConversion_Blocking@ret:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0xE
   595   00007C                     	ds	1
   596   00007D                     
   597                           ; 1 bytes @ 0xF
   598 ;;
   599 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   600 ;;
   601 ;; *************** function _main *****************
   602 ;; Defined at:
   603 ;;		line 186 in file "application.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  2  1339[None  ] int 
   610 ;; Registers used:
   611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels required when called: 5
   623 ;; This function calls:
   624 ;;		_ADC_GetConversion_Blocking
   625 ;;		_ADC_Init
   626 ;; This function is called by:
   627 ;;		Startup code after reset
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text0
   632   001608                     __ptext0:
   633                           	callstack 0
   634   001608                     _main:
   635                           	callstack 26
   636   001608                     
   637                           ;application.c: 190:     ret &= ADC_Init(&adc_1);
   638   001608  0E68               	movlw	low _adc_1
   639   00160A  6E72               	movwf	ADC_Init@_adc^0,c
   640   00160C  0E00               	movlw	high _adc_1
   641   00160E  6E73               	movwf	(ADC_Init@_adc+1)^0,c
   642   001610  ECA4  F00A         	call	_ADC_Init	;wreg free
   643   001614  1635               	andwf	_ret^0,f,c
   644   001616                     l1340:
   645                           
   646                           ;application.c: 193:     {;application.c: 194:         ret &= ADC_GetConversion_Blocking
      +                          (&adc_1,ADC_CHANNEL_AN0,&conversion_Result_AN0);
   647   001616  0E68               	movlw	low _adc_1
   648   001618  6E77               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   649   00161A  0E00               	movlw	high _adc_1
   650   00161C  6E78               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   651   00161E  0E00               	movlw	0
   652   001620  6E79               	movwf	ADC_GetConversion_Blocking@channel^0,c
   653   001622  0E47               	movlw	low _conversion_Result_AN0
   654   001624  6E7A               	movwf	ADC_GetConversion_Blocking@conversion_Result^0,c
   655   001626  0E00               	movlw	high _conversion_Result_AN0
   656   001628  6E7B               	movwf	(ADC_GetConversion_Blocking@conversion_Result+1)^0,c
   657   00162A  EC45  F00B         	call	_ADC_GetConversion_Blocking	;wreg free
   658   00162E  1635               	andwf	_ret^0,f,c
   659                           
   660                           ;application.c: 195:         ret &= ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN1,&c
      +                          onversion_Result_AN1);
   661   001630  0E68               	movlw	low _adc_1
   662   001632  6E77               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   663   001634  0E00               	movlw	high _adc_1
   664   001636  6E78               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   665   001638  0E01               	movlw	1
   666   00163A  6E79               	movwf	ADC_GetConversion_Blocking@channel^0,c
   667   00163C  0E45               	movlw	low _conversion_Result_AN1
   668   00163E  6E7A               	movwf	ADC_GetConversion_Blocking@conversion_Result^0,c
   669   001640  0E00               	movlw	high _conversion_Result_AN1
   670   001642  6E7B               	movwf	(ADC_GetConversion_Blocking@conversion_Result+1)^0,c
   671   001644  EC45  F00B         	call	_ADC_GetConversion_Blocking	;wreg free
   672   001648  1635               	andwf	_ret^0,f,c
   673                           
   674                           ;application.c: 196:         ret &= ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN2,&c
      +                          onversion_Result_AN2);
   675   00164A  0E68               	movlw	low _adc_1
   676   00164C  6E77               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   677   00164E  0E00               	movlw	high _adc_1
   678   001650  6E78               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   679   001652  0E02               	movlw	2
   680   001654  6E79               	movwf	ADC_GetConversion_Blocking@channel^0,c
   681   001656  0E43               	movlw	low _conversion_Result_AN2
   682   001658  6E7A               	movwf	ADC_GetConversion_Blocking@conversion_Result^0,c
   683   00165A  0E00               	movlw	high _conversion_Result_AN2
   684   00165C  6E7B               	movwf	(ADC_GetConversion_Blocking@conversion_Result+1)^0,c
   685   00165E  EC45  F00B         	call	_ADC_GetConversion_Blocking	;wreg free
   686   001662  1635               	andwf	_ret^0,f,c
   687                           
   688                           ;application.c: 197:         ret &= ADC_GetConversion_Blocking(&adc_1,ADC_CHANNEL_AN3,&c
      +                          onversion_Result_AN3);
   689   001664  0E68               	movlw	low _adc_1
   690   001666  6E77               	movwf	ADC_GetConversion_Blocking@_adc^0,c
   691   001668  0E00               	movlw	high _adc_1
   692   00166A  6E78               	movwf	(ADC_GetConversion_Blocking@_adc+1)^0,c
   693   00166C  0E03               	movlw	3
   694   00166E  6E79               	movwf	ADC_GetConversion_Blocking@channel^0,c
   695   001670  0E41               	movlw	low _conversion_Result_AN3
   696   001672  6E7A               	movwf	ADC_GetConversion_Blocking@conversion_Result^0,c
   697   001674  0E00               	movlw	high _conversion_Result_AN3
   698   001676  6E7B               	movwf	(ADC_GetConversion_Blocking@conversion_Result+1)^0,c
   699   001678  EC45  F00B         	call	_ADC_GetConversion_Blocking	;wreg free
   700   00167C  1635               	andwf	_ret^0,f,c
   701   00167E                     
   702                           ;application.c: 198:         flag = ret;
   703   00167E  C035  F07D         	movff	_ret,_flag
   704   001682  EF0B  F00B         	goto	l1340
   705   001686  EF07  F000         	goto	start
   706   00168A                     __end_of_main:
   707                           	callstack 0
   708                           
   709 ;; *************** function _ADC_Init *****************
   710 ;; Defined at:
   711 ;;		line 31 in file "MCAL_Layer/ADC/hal_adc.c"
   712 ;; Parameters:    Size  Location     Type
   713 ;;  _adc            2    4[COMRAM] PTR const struct .
   714 ;;		 -> adc_1(6), 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  ret             1    7[COMRAM] unsigned char 
   717 ;; Return value:  Size  Location     Type
   718 ;;                  1    wreg      unsigned char 
   719 ;; Registers used:
   720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;Total ram usage:        4 bytes
   731 ;; Hardware stack levels used: 1
   732 ;; Hardware stack levels required when called: 3
   733 ;; This function calls:
   734 ;;		_adc_input_channel_port_configure
   735 ;;		_configure_voltage_reference
   736 ;;		_select_result_format
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text1
   743   001548                     __ptext1:
   744                           	callstack 0
   745   001548                     _ADC_Init:
   746                           	callstack 27
   747   001548                     
   748                           ;MCAL_Layer/ADC/hal_adc.c: 31: Std_ReturnType ADC_Init(const adc_config_t * _adc);MCAL_L
      +                          ayer/ADC/hal_adc.c: 32: {;MCAL_Layer/ADC/hal_adc.c: 33:     Std_ReturnType ret = (Std_Re
      +                          turnType)0x01;
   749   001548  0E01               	movlw	1
   750   00154A  6E75               	movwf	ADC_Init@ret^0,c
   751   00154C                     
   752                           ;MCAL_Layer/ADC/hal_adc.c: 35:     if(((void*)0) == _adc)
   753   00154C  5072               	movf	ADC_Init@_adc^0,w,c
   754   00154E  1073               	iorwf	(ADC_Init@_adc+1)^0,w,c
   755   001550  A4D8               	btfss	status,2,c
   756   001552  EFAD  F00A         	goto	u3161
   757   001556  EFAF  F00A         	goto	u3160
   758   00155A                     u3161:
   759   00155A  EFB3  F00A         	goto	l365
   760   00155E                     u3160:
   761   00155E                     
   762                           ;MCAL_Layer/ADC/hal_adc.c: 36:     {;MCAL_Layer/ADC/hal_adc.c: 37:         ret = (Std_Re
      +                          turnType)0x00;
   763   00155E  0E00               	movlw	0
   764   001560  6E75               	movwf	ADC_Init@ret^0,c
   765                           
   766                           ;MCAL_Layer/ADC/hal_adc.c: 38:     }
   767   001562  EF02  F00B         	goto	l4388
   768   001566                     l365:
   769                           
   770                           ;MCAL_Layer/ADC/hal_adc.c: 40:     {;MCAL_Layer/ADC/hal_adc.c: 41:         (ADCON0bits.A
      +                          DON = 0);
   771   001566  90C2               	bcf	194,0,c	;volatile
   772   001568                     
   773                           ;MCAL_Layer/ADC/hal_adc.c: 42:         ADCON2bits.ACQT = _adc->acquisition_time;
   774   001568  EE20 F002          	lfsr	2,2
   775   00156C  5072               	movf	ADC_Init@_adc^0,w,c
   776   00156E  26D9               	addwf	fsr2l,f,c
   777   001570  5073               	movf	(ADC_Init@_adc+1)^0,w,c
   778   001572  22DA               	addwfc	fsr2h,f,c
   779   001574  50DF               	movf	indf2,w,c
   780   001576  6E74               	movwf	??_ADC_Init^0,c
   781   001578  4674               	rlncf	??_ADC_Init^0,f,c
   782   00157A  4674               	rlncf	??_ADC_Init^0,f,c
   783   00157C  4674               	rlncf	??_ADC_Init^0,f,c
   784   00157E  50C0               	movf	192,w,c	;volatile
   785   001580  1874               	xorwf	??_ADC_Init^0,w,c
   786   001582  0BC7               	andlw	-57
   787   001584  1874               	xorwf	??_ADC_Init^0,w,c
   788   001586  6EC0               	movwf	192,c	;volatile
   789                           
   790                           ;MCAL_Layer/ADC/hal_adc.c: 43:         ADCON2bits.ADCS = _adc->conversion_clock;
   791   001588  EE20 F003          	lfsr	2,3
   792   00158C  5072               	movf	ADC_Init@_adc^0,w,c
   793   00158E  26D9               	addwf	fsr2l,f,c
   794   001590  5073               	movf	(ADC_Init@_adc+1)^0,w,c
   795   001592  22DA               	addwfc	fsr2h,f,c
   796   001594  50DF               	movf	indf2,w,c
   797   001596  6E74               	movwf	??_ADC_Init^0,c
   798   001598  50C0               	movf	192,w,c	;volatile
   799   00159A  1874               	xorwf	??_ADC_Init^0,w,c
   800   00159C  0BF8               	andlw	-8
   801   00159E  1874               	xorwf	??_ADC_Init^0,w,c
   802   0015A0  6EC0               	movwf	192,c	;volatile
   803                           
   804                           ;MCAL_Layer/ADC/hal_adc.c: 44:         ADCON0bits.CHS = _adc->adc_channel;
   805   0015A2  EE20 F004          	lfsr	2,4
   806   0015A6  5072               	movf	ADC_Init@_adc^0,w,c
   807   0015A8  26D9               	addwf	fsr2l,f,c
   808   0015AA  5073               	movf	(ADC_Init@_adc+1)^0,w,c
   809   0015AC  22DA               	addwfc	fsr2h,f,c
   810   0015AE  50DF               	movf	indf2,w,c
   811   0015B0  6E74               	movwf	??_ADC_Init^0,c
   812   0015B2  4674               	rlncf	??_ADC_Init^0,f,c
   813   0015B4  4674               	rlncf	??_ADC_Init^0,f,c
   814   0015B6  50C2               	movf	194,w,c	;volatile
   815   0015B8  1874               	xorwf	??_ADC_Init^0,w,c
   816   0015BA  0BC3               	andlw	-61
   817   0015BC  1874               	xorwf	??_ADC_Init^0,w,c
   818   0015BE  6EC2               	movwf	194,c	;volatile
   819   0015C0                     
   820                           ;MCAL_Layer/ADC/hal_adc.c: 45:         adc_input_channel_port_configure(_adc->adc_channe
      +                          l);
   821   0015C0  EE20 F004          	lfsr	2,4
   822   0015C4  5072               	movf	ADC_Init@_adc^0,w,c
   823   0015C6  26D9               	addwf	fsr2l,f,c
   824   0015C8  5073               	movf	(ADC_Init@_adc+1)^0,w,c
   825   0015CA  22DA               	addwfc	fsr2h,f,c
   826   0015CC  50DF               	movf	indf2,w,c
   827   0015CE  ECD6  F009         	call	_adc_input_channel_port_configure
   828   0015D2                     
   829                           ;MCAL_Layer/ADC/hal_adc.c: 49:             (PIE1bits.ADIE = 1);
   830   0015D2  8C9D               	bsf	157,6,c	;volatile
   831   0015D4                     
   832                           ;MCAL_Layer/ADC/hal_adc.c: 50:             (PIR1bits.ADIF = 0);
   833   0015D4  9C9E               	bcf	158,6,c	;volatile
   834   0015D6                     
   835                           ;MCAL_Layer/ADC/hal_adc.c: 71:                 (INTCONbits.GIE=1);
   836   0015D6  8EF2               	bsf	242,7,c	;volatile
   837   0015D8                     
   838                           ;MCAL_Layer/ADC/hal_adc.c: 72:                 (INTCONbits.PEIE=1);
   839   0015D8  8CF2               	bsf	242,6,c	;volatile
   840   0015DA                     
   841                           ;MCAL_Layer/ADC/hal_adc.c: 74:             ADC_Interrupt_Handeler = _adc->ADC_InterruptH
      +                          andler;
   842   0015DA  C072  FFD9         	movff	ADC_Init@_adc,fsr2l
   843   0015DE  C073  FFDA         	movff	ADC_Init@_adc+1,fsr2h
   844   0015E2  CFDE F033          	movff	postinc2,_ADC_Interrupt_Handeler
   845   0015E6  CFDD F034          	movff	postdec2,_ADC_Interrupt_Handeler+1
   846   0015EA                     
   847                           ;MCAL_Layer/ADC/hal_adc.c: 77:         select_result_format(_adc);
   848   0015EA  C072  F06F         	movff	ADC_Init@_adc,select_result_format@_adc
   849   0015EE  C073  F070         	movff	ADC_Init@_adc+1,select_result_format@_adc+1
   850   0015F2  ECD1  F00B         	call	_select_result_format	;wreg free
   851   0015F6                     
   852                           ;MCAL_Layer/ADC/hal_adc.c: 78:         configure_voltage_reference(_adc);
   853   0015F6  C072  F06F         	movff	ADC_Init@_adc,configure_voltage_reference@_adc
   854   0015FA  C073  F070         	movff	ADC_Init@_adc+1,configure_voltage_reference@_adc+1
   855   0015FE  ECAC  F00B         	call	_configure_voltage_reference	;wreg free
   856   001602                     
   857                           ;MCAL_Layer/ADC/hal_adc.c: 80:         (ADCON0bits.ADON = 1);
   858   001602  80C2               	bsf	194,0,c	;volatile
   859   001604                     l4388:
   860                           
   861                           ;MCAL_Layer/ADC/hal_adc.c: 84:     return ret;
   862   001604  5075               	movf	ADC_Init@ret^0,w,c
   863   001606  0012               	return		;funcret
   864   001608                     __end_of_ADC_Init:
   865                           	callstack 0
   866                           
   867 ;; *************** function _select_result_format *****************
   868 ;; Defined at:
   869 ;;		line 316 in file "MCAL_Layer/ADC/hal_adc.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  _adc            2    1[COMRAM] PTR const struct .
   872 ;;		 -> adc_1(6), 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 2
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_ADC_Init
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text2
   899   0017A2                     __ptext2:
   900                           	callstack 0
   901   0017A2                     _select_result_format:
   902                           	callstack 27
   903   0017A2                     
   904                           ;MCAL_Layer/ADC/hal_adc.c: 316: static __attribute__((inline)) void select_result_format
      +                          (const adc_config_t * _adc);MCAL_Layer/ADC/hal_adc.c: 317: {;MCAL_Layer/ADC/hal_adc.c: 3
      +                          18:     if ( 0x01U == _adc->result_format)
   905   0017A2  EE20 F005          	lfsr	2,5
   906   0017A6  506F               	movf	select_result_format@_adc^0,w,c
   907   0017A8  26D9               	addwf	fsr2l,f,c
   908   0017AA  5070               	movf	(select_result_format@_adc+1)^0,w,c
   909   0017AC  22DA               	addwfc	fsr2h,f,c
   910   0017AE  A2DF               	btfss	indf2,1,c
   911   0017B0  EFDC  F00B         	goto	u3051
   912   0017B4  EFDE  F00B         	goto	u3050
   913   0017B8                     u3051:
   914   0017B8  EFE1  F00B         	goto	l4308
   915   0017BC                     u3050:
   916   0017BC                     
   917                           ;MCAL_Layer/ADC/hal_adc.c: 319:     {;MCAL_Layer/ADC/hal_adc.c: 320:        (ADCON2bits.
      +                          ADFM = 1);
   918   0017BC  8EC0               	bsf	192,7,c	;volatile
   919                           
   920                           ;MCAL_Layer/ADC/hal_adc.c: 321:     }
   921   0017BE  EFF2  F00B         	goto	l441
   922   0017C2                     l4308:
   923   0017C2  EE20 F005          	lfsr	2,5
   924   0017C6  506F               	movf	select_result_format@_adc^0,w,c
   925   0017C8  26D9               	addwf	fsr2l,f,c
   926   0017CA  5070               	movf	(select_result_format@_adc+1)^0,w,c
   927   0017CC  22DA               	addwfc	fsr2h,f,c
   928   0017CE  B2DF               	btfsc	indf2,1,c
   929   0017D0  EFEC  F00B         	goto	u3061
   930   0017D4  EFEE  F00B         	goto	u3060
   931   0017D8                     u3061:
   932   0017D8  EFF1  F00B         	goto	l439
   933   0017DC                     u3060:
   934   0017DC                     
   935                           ;MCAL_Layer/ADC/hal_adc.c: 323:     {;MCAL_Layer/ADC/hal_adc.c: 324:         (ADCON2bits
      +                          .ADFM = 0);
   936   0017DC  9EC0               	bcf	192,7,c	;volatile
   937                           
   938                           ;MCAL_Layer/ADC/hal_adc.c: 325:     }
   939   0017DE  EFF2  F00B         	goto	l441
   940   0017E2                     l439:
   941                           
   942                           ;MCAL_Layer/ADC/hal_adc.c: 327:     {;MCAL_Layer/ADC/hal_adc.c: 328:         (ADCON2bits
      +                          .ADFM = 1);
   943   0017E2  8EC0               	bsf	192,7,c	;volatile
   944   0017E4                     l441:
   945   0017E4  0012               	return		;funcret
   946   0017E6                     __end_of_select_result_format:
   947                           	callstack 0
   948                           
   949 ;; *************** function _configure_voltage_reference *****************
   950 ;; Defined at:
   951 ;;		line 333 in file "MCAL_Layer/ADC/hal_adc.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  _adc            2    1[COMRAM] PTR const struct .
   954 ;;		 -> adc_1(6), 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used: 1
   972 ;; Hardware stack levels required when called: 2
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_ADC_Init
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           	psect	text3
   981   001758                     __ptext3:
   982                           	callstack 0
   983   001758                     _configure_voltage_reference:
   984                           	callstack 27
   985   001758                     
   986                           ;MCAL_Layer/ADC/hal_adc.c: 333: static __attribute__((inline)) void configure_voltage_re
      +                          ference(const adc_config_t * _adc);MCAL_Layer/ADC/hal_adc.c: 334: {;MCAL_Layer/ADC/hal_a
      +                          dc.c: 335:     if (0x01U == _adc->voltage_reference)
   987   001758  EE20 F005          	lfsr	2,5
   988   00175C  506F               	movf	configure_voltage_reference@_adc^0,w,c
   989   00175E  26D9               	addwf	fsr2l,f,c
   990   001760  5070               	movf	(configure_voltage_reference@_adc+1)^0,w,c
   991   001762  22DA               	addwfc	fsr2h,f,c
   992   001764  A0DF               	btfss	indf2,0,c
   993   001766  EFB7  F00B         	goto	u3071
   994   00176A  EFB9  F00B         	goto	u3070
   995   00176E                     u3071:
   996   00176E  EFBD  F00B         	goto	l4314
   997   001772                     u3070:
   998   001772  8AC1               	bsf	193,5,c	;volatile
   999   001774  88C1               	bsf	193,4,c	;volatile
  1000   001776  EFD0  F00B         	goto	l454
  1001   00177A                     l4314:
  1002   00177A  EE20 F005          	lfsr	2,5
  1003   00177E  506F               	movf	configure_voltage_reference@_adc^0,w,c
  1004   001780  26D9               	addwf	fsr2l,f,c
  1005   001782  5070               	movf	(configure_voltage_reference@_adc+1)^0,w,c
  1006   001784  22DA               	addwfc	fsr2h,f,c
  1007   001786  B0DF               	btfsc	indf2,0,c
  1008   001788  EFC8  F00B         	goto	u3081
  1009   00178C  EFCA  F00B         	goto	u3080
  1010   001790                     u3081:
  1011   001790  EFCE  F00B         	goto	l452
  1012   001794                     u3080:
  1013   001794  9AC1               	bcf	193,5,c	;volatile
  1014   001796  98C1               	bcf	193,4,c	;volatile
  1015   001798  EFD0  F00B         	goto	l454
  1016   00179C                     l452:
  1017   00179C  9AC1               	bcf	193,5,c	;volatile
  1018   00179E  98C1               	bcf	193,4,c	;volatile
  1019   0017A0                     l454:
  1020   0017A0  0012               	return		;funcret
  1021   0017A2                     __end_of_configure_voltage_reference:
  1022                           	callstack 0
  1023                           
  1024 ;; *************** function _ADC_GetConversion_Blocking *****************
  1025 ;; Defined at:
  1026 ;;		line 227 in file "MCAL_Layer/ADC/hal_adc.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  _adc            2    9[COMRAM] PTR const struct .
  1029 ;;		 -> adc_1(6), 
  1030 ;;  channel         1   11[COMRAM] enum E3033
  1031 ;;  conversion_R    2   12[COMRAM] PTR unsigned short 
  1032 ;;		 -> conversion_Result_AN3(2), conversion_Result_AN2(2), conversion_Result_AN1(2), conversion_Result_AN0(2), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  ret             1   14[COMRAM] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      unsigned char 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1044 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;Total ram usage:        6 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 4
  1051 ;; This function calls:
  1052 ;;		_ADC_GetConversionResult
  1053 ;;		_ADC_SelectChannel
  1054 ;;		_ADC_StartConversion
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text4
  1061   00168A                     __ptext4:
  1062                           	callstack 0
  1063   00168A                     _ADC_GetConversion_Blocking:
  1064                           	callstack 26
  1065   00168A                     
  1066                           ;MCAL_Layer/ADC/hal_adc.c: 227: Std_ReturnType ADC_GetConversion_Blocking(const adc_conf
      +                          ig_t * _adc,adc_channel_select_t channel,;MCAL_Layer/ADC/hal_adc.c: 228:                
      +                                            adc_result_t *conversion_Result);MCAL_Layer/ADC/hal_adc.c: 229: {;MCAL
      +                          _Layer/ADC/hal_adc.c: 230:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1067   00168A  0E01               	movlw	1
  1068   00168C  6E7C               	movwf	ADC_GetConversion_Blocking@ret^0,c
  1069   00168E                     
  1070                           ;MCAL_Layer/ADC/hal_adc.c: 232:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _Result))
  1071   00168E  5077               	movf	ADC_GetConversion_Blocking@_adc^0,w,c
  1072   001690  1078               	iorwf	(ADC_GetConversion_Blocking@_adc+1)^0,w,c
  1073   001692  B4D8               	btfsc	status,2,c
  1074   001694  EF4E  F00B         	goto	u3171
  1075   001698  EF50  F00B         	goto	u3170
  1076   00169C                     u3171:
  1077   00169C  EF59  F00B         	goto	l4398
  1078   0016A0                     u3170:
  1079   0016A0  507A               	movf	ADC_GetConversion_Blocking@conversion_Result^0,w,c
  1080   0016A2  107B               	iorwf	(ADC_GetConversion_Blocking@conversion_Result+1)^0,w,c
  1081   0016A4  A4D8               	btfss	status,2,c
  1082   0016A6  EF57  F00B         	goto	u3181
  1083   0016AA  EF59  F00B         	goto	u3180
  1084   0016AE                     u3181:
  1085   0016AE  EF5D  F00B         	goto	l4400
  1086   0016B2                     u3180:
  1087   0016B2                     l4398:
  1088                           
  1089                           ;MCAL_Layer/ADC/hal_adc.c: 233:     {;MCAL_Layer/ADC/hal_adc.c: 234:         ret = (Std_
      +                          ReturnType)0x00;
  1090   0016B2  0E00               	movlw	0
  1091   0016B4  6E7C               	movwf	ADC_GetConversion_Blocking@ret^0,c
  1092                           
  1093                           ;MCAL_Layer/ADC/hal_adc.c: 235:     }
  1094   0016B6  EF7F  F00B         	goto	l4404
  1095   0016BA                     l4400:
  1096                           
  1097                           ;MCAL_Layer/ADC/hal_adc.c: 237:     {;MCAL_Layer/ADC/hal_adc.c: 238:         ret &= ADC_
      +                          SelectChannel(_adc, channel);
  1098   0016BA  C077  F072         	movff	ADC_GetConversion_Blocking@_adc,ADC_SelectChannel@_adc
  1099   0016BE  C078  F073         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_SelectChannel@_adc+1
  1100   0016C2  C079  F074         	movff	ADC_GetConversion_Blocking@channel,ADC_SelectChannel@channel
  1101   0016C6  ECF3  F00B         	call	_ADC_SelectChannel	;wreg free
  1102   0016CA  167C               	andwf	ADC_GetConversion_Blocking@ret^0,f,c
  1103                           
  1104                           ;MCAL_Layer/ADC/hal_adc.c: 239:         ret &= ADC_StartConversion(_adc);
  1105   0016CC  C077  F06F         	movff	ADC_GetConversion_Blocking@_adc,ADC_StartConversion@_adc
  1106   0016D0  C078  F070         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_StartConversion@_adc+1
  1107   0016D4  EC23  F00C         	call	_ADC_StartConversion	;wreg free
  1108   0016D8  167C               	andwf	ADC_GetConversion_Blocking@ret^0,f,c
  1109   0016DA                     l407:
  1110   0016DA  B2C2               	btfsc	194,1,c	;volatile
  1111   0016DC  EF72  F00B         	goto	u3191
  1112   0016E0  EF74  F00B         	goto	u3190
  1113   0016E4                     u3191:
  1114   0016E4  EF6D  F00B         	goto	l407
  1115   0016E8                     u3190:
  1116   0016E8                     
  1117                           ;MCAL_Layer/ADC/hal_adc.c: 241:         ret &= ADC_GetConversionResult(_adc, conversion_
      +                          Result);
  1118   0016E8  C077  F06F         	movff	ADC_GetConversion_Blocking@_adc,ADC_GetConversionResult@_adc
  1119   0016EC  C078  F070         	movff	ADC_GetConversion_Blocking@_adc+1,ADC_GetConversionResult@_adc+1
  1120   0016F0  C07A  F071         	movff	ADC_GetConversion_Blocking@conversion_Result,ADC_GetConversionResult@conversion_R
      +                          esult
  1121   0016F4  C07B  F072         	movff	ADC_GetConversion_Blocking@conversion_Result+1,ADC_GetConversionResult@conversion
      +                          _Result+1
  1122   0016F8  EC42  F00A         	call	_ADC_GetConversionResult	;wreg free
  1123   0016FC  167C               	andwf	ADC_GetConversion_Blocking@ret^0,f,c
  1124   0016FE                     l4404:
  1125                           
  1126                           ;MCAL_Layer/ADC/hal_adc.c: 244:     return ret;
  1127   0016FE  507C               	movf	ADC_GetConversion_Blocking@ret^0,w,c
  1128   001700  0012               	return		;funcret
  1129   001702                     __end_of_ADC_GetConversion_Blocking:
  1130                           	callstack 0
  1131                           
  1132 ;; *************** function _ADC_StartConversion *****************
  1133 ;; Defined at:
  1134 ;;		line 145 in file "MCAL_Layer/ADC/hal_adc.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  _adc            2    1[COMRAM] PTR const struct .
  1137 ;;		 -> adc_1(6), 
  1138 ;; Auto vars:     Size  Location     Type
  1139 ;;  ret             1    3[COMRAM] unsigned char 
  1140 ;; Return value:  Size  Location     Type
  1141 ;;                  1    wreg      unsigned char 
  1142 ;; Registers used:
  1143 ;;		wreg, status,2, status,0
  1144 ;; Tracked objects:
  1145 ;;		On entry : 0/0
  1146 ;;		On exit  : 0/0
  1147 ;;		Unchanged: 0/0
  1148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1152 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;Total ram usage:        3 bytes
  1154 ;; Hardware stack levels used: 1
  1155 ;; Hardware stack levels required when called: 2
  1156 ;; This function calls:
  1157 ;;		Nothing
  1158 ;; This function is called by:
  1159 ;;		_ADC_GetConversion_Blocking
  1160 ;;		_ADC_Conversion_Interrupt
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text5
  1165   001846                     __ptext5:
  1166                           	callstack 0
  1167   001846                     _ADC_StartConversion:
  1168                           	callstack 27
  1169   001846                     
  1170                           ;MCAL_Layer/ADC/hal_adc.c: 145: Std_ReturnType ADC_StartConversion(const adc_config_t * 
      +                          _adc);MCAL_Layer/ADC/hal_adc.c: 146: {;MCAL_Layer/ADC/hal_adc.c: 147:     Std_ReturnType
      +                           ret = (Std_ReturnType)0x01;
  1171   001846  0E01               	movlw	1
  1172   001848  6E71               	movwf	ADC_StartConversion@ret^0,c
  1173   00184A                     
  1174                           ;MCAL_Layer/ADC/hal_adc.c: 149:     if(((void*)0) == _adc)
  1175   00184A  506F               	movf	ADC_StartConversion@_adc^0,w,c
  1176   00184C  1070               	iorwf	(ADC_StartConversion@_adc+1)^0,w,c
  1177   00184E  A4D8               	btfss	status,2,c
  1178   001850  EF2C  F00C         	goto	u3101
  1179   001854  EF2E  F00C         	goto	u3100
  1180   001858                     u3101:
  1181   001858  EF32  F00C         	goto	l380
  1182   00185C                     u3100:
  1183   00185C                     
  1184                           ;MCAL_Layer/ADC/hal_adc.c: 150:     {;MCAL_Layer/ADC/hal_adc.c: 151:         ret = (Std_
      +                          ReturnType)0x00;
  1185   00185C  0E00               	movlw	0
  1186   00185E  6E71               	movwf	ADC_StartConversion@ret^0,c
  1187                           
  1188                           ;MCAL_Layer/ADC/hal_adc.c: 152:     }
  1189   001860  EF33  F00C         	goto	l4336
  1190   001864                     l380:
  1191                           
  1192                           ;MCAL_Layer/ADC/hal_adc.c: 154:     {;MCAL_Layer/ADC/hal_adc.c: 155:         (ADCON0bits
      +                          .GO_nDONE = 1);;
  1193   001864  82C2               	bsf	194,1,c	;volatile
  1194   001866                     l4336:
  1195                           
  1196                           ;MCAL_Layer/ADC/hal_adc.c: 158:     return ret;
  1197   001866  5071               	movf	ADC_StartConversion@ret^0,w,c
  1198   001868  0012               	return		;funcret
  1199   00186A                     __end_of_ADC_StartConversion:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _ADC_SelectChannel *****************
  1203 ;; Defined at:
  1204 ;;		line 122 in file "MCAL_Layer/ADC/hal_adc.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  _adc            2    4[COMRAM] PTR const struct .
  1207 ;;		 -> adc_1(6), 
  1208 ;;  channel         1    6[COMRAM] enum E3033
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  ret             1    8[COMRAM] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      unsigned char 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        5 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 3
  1227 ;; This function calls:
  1228 ;;		_adc_input_channel_port_configure
  1229 ;; This function is called by:
  1230 ;;		_ADC_GetConversion_Blocking
  1231 ;;		_ADC_Conversion_Interrupt
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text6
  1236   0017E6                     __ptext6:
  1237                           	callstack 0
  1238   0017E6                     _ADC_SelectChannel:
  1239                           	callstack 26
  1240   0017E6                     
  1241                           ;MCAL_Layer/ADC/hal_adc.c: 122: Std_ReturnType ADC_SelectChannel(const adc_config_t * _a
      +                          dc,adc_channel_select_t channel);MCAL_Layer/ADC/hal_adc.c: 123: {;MCAL_Layer/ADC/hal_adc
      +                          .c: 124:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1242   0017E6  0E01               	movlw	1
  1243   0017E8  6E76               	movwf	ADC_SelectChannel@ret^0,c
  1244   0017EA                     
  1245                           ;MCAL_Layer/ADC/hal_adc.c: 126:     if(((void*)0) == _adc)
  1246   0017EA  5072               	movf	ADC_SelectChannel@_adc^0,w,c
  1247   0017EC  1073               	iorwf	(ADC_SelectChannel@_adc+1)^0,w,c
  1248   0017EE  A4D8               	btfss	status,2,c
  1249   0017F0  EFFC  F00B         	goto	u3091
  1250   0017F4  EFFE  F00B         	goto	u3090
  1251   0017F8                     u3091:
  1252   0017F8  EF02  F00C         	goto	l4322
  1253   0017FC                     u3090:
  1254   0017FC                     
  1255                           ;MCAL_Layer/ADC/hal_adc.c: 127:     {;MCAL_Layer/ADC/hal_adc.c: 128:         ret = (Std_
      +                          ReturnType)0x00;
  1256   0017FC  0E00               	movlw	0
  1257   0017FE  6E76               	movwf	ADC_SelectChannel@ret^0,c
  1258                           
  1259                           ;MCAL_Layer/ADC/hal_adc.c: 129:     }
  1260   001800  EF0E  F00C         	goto	l4326
  1261   001804                     l4322:
  1262                           
  1263                           ;MCAL_Layer/ADC/hal_adc.c: 131:     {;MCAL_Layer/ADC/hal_adc.c: 132:         ADCON0bits.
      +                          CHS = channel;
  1264   001804  C074  F075         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  1265   001808  4675               	rlncf	??_ADC_SelectChannel^0,f,c
  1266   00180A  4675               	rlncf	??_ADC_SelectChannel^0,f,c
  1267   00180C  50C2               	movf	194,w,c	;volatile
  1268   00180E  1875               	xorwf	??_ADC_SelectChannel^0,w,c
  1269   001810  0BC3               	andlw	-61
  1270   001812  1875               	xorwf	??_ADC_SelectChannel^0,w,c
  1271   001814  6EC2               	movwf	194,c	;volatile
  1272   001816                     
  1273                           ;MCAL_Layer/ADC/hal_adc.c: 133:         adc_input_channel_port_configure(channel);
  1274   001816  5074               	movf	ADC_SelectChannel@channel^0,w,c
  1275   001818  ECD6  F009         	call	_adc_input_channel_port_configure
  1276   00181C                     l4326:
  1277                           
  1278                           ;MCAL_Layer/ADC/hal_adc.c: 136:     return ret;
  1279   00181C  5076               	movf	ADC_SelectChannel@ret^0,w,c
  1280   00181E  0012               	return		;funcret
  1281   001820                     __end_of_ADC_SelectChannel:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function _adc_input_channel_port_configure *****************
  1285 ;; Defined at:
  1286 ;;		line 267 in file "MCAL_Layer/ADC/hal_adc.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  channel         1    wreg     enum E3033
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  channel         1    3[COMRAM] enum E3033
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:        3 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 2
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_ADC_Init
  1311 ;;		_ADC_SelectChannel
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text7
  1316   0013AC                     __ptext7:
  1317                           	callstack 0
  1318   0013AC                     _adc_input_channel_port_configure:
  1319                           	callstack 27
  1320                           
  1321                           ;incstack = 0
  1322                           ;adc_input_channel_port_configure@channel stored from wreg
  1323   0013AC  6E71               	movwf	adc_input_channel_port_configure@channel^0,c
  1324   0013AE                     
  1325                           ;MCAL_Layer/ADC/hal_adc.c: 267: static __attribute__((inline)) void adc_input_channel_po
      +                          rt_configure(adc_channel_select_t channel);MCAL_Layer/ADC/hal_adc.c: 268: {;MCAL_Layer/A
      +                          DC/hal_adc.c: 269:     switch (channel)
  1326   0013AE  EF00  F00A         	goto	l2192
  1327   0013B2                     l2166:
  1328                           
  1329                           ;MCAL_Layer/ADC/hal_adc.c: 272:             (TRISA |= (((uint8)1) << 0x0));
  1330   0013B2  8092               	bsf	146,0,c	;volatile
  1331                           
  1332                           ;MCAL_Layer/ADC/hal_adc.c: 273:             break;
  1333   0013B4  EF41  F00A         	goto	l434
  1334   0013B8                     l2168:
  1335                           
  1336                           ;MCAL_Layer/ADC/hal_adc.c: 275:             (TRISA |= (((uint8)1) << 0x1));
  1337   0013B8  8292               	bsf	146,1,c	;volatile
  1338                           
  1339                           ;MCAL_Layer/ADC/hal_adc.c: 276:             break;
  1340   0013BA  EF41  F00A         	goto	l434
  1341   0013BE                     l2170:
  1342                           
  1343                           ;MCAL_Layer/ADC/hal_adc.c: 278:             (TRISA |= (((uint8)1) << 0x2));
  1344   0013BE  8492               	bsf	146,2,c	;volatile
  1345                           
  1346                           ;MCAL_Layer/ADC/hal_adc.c: 279:             break;
  1347   0013C0  EF41  F00A         	goto	l434
  1348   0013C4                     l2172:
  1349                           
  1350                           ;MCAL_Layer/ADC/hal_adc.c: 281:             (TRISA |= (((uint8)1) << 0x3));
  1351   0013C4  8692               	bsf	146,3,c	;volatile
  1352                           
  1353                           ;MCAL_Layer/ADC/hal_adc.c: 282:             break;
  1354   0013C6  EF41  F00A         	goto	l434
  1355   0013CA                     l2174:
  1356                           
  1357                           ;MCAL_Layer/ADC/hal_adc.c: 284:             (TRISA |= (((uint8)1) << 0x5));
  1358   0013CA  8A92               	bsf	146,5,c	;volatile
  1359                           
  1360                           ;MCAL_Layer/ADC/hal_adc.c: 285:             break;
  1361   0013CC  EF41  F00A         	goto	l434
  1362   0013D0                     l2176:
  1363                           
  1364                           ;MCAL_Layer/ADC/hal_adc.c: 287:             (TRISE |= (((uint8)1) << 0x0));
  1365   0013D0  8096               	bsf	150,0,c	;volatile
  1366                           
  1367                           ;MCAL_Layer/ADC/hal_adc.c: 288:             break;
  1368   0013D2  EF41  F00A         	goto	l434
  1369   0013D6                     l2178:
  1370                           
  1371                           ;MCAL_Layer/ADC/hal_adc.c: 290:             (TRISE |= (((uint8)1) << 0x1));
  1372   0013D6  8296               	bsf	150,1,c	;volatile
  1373                           
  1374                           ;MCAL_Layer/ADC/hal_adc.c: 291:             break;
  1375   0013D8  EF41  F00A         	goto	l434
  1376   0013DC                     l2180:
  1377                           
  1378                           ;MCAL_Layer/ADC/hal_adc.c: 293:             (TRISE |= (((uint8)1) << 0x2));
  1379   0013DC  8496               	bsf	150,2,c	;volatile
  1380                           
  1381                           ;MCAL_Layer/ADC/hal_adc.c: 294:             break;
  1382   0013DE  EF41  F00A         	goto	l434
  1383   0013E2                     l2182:
  1384                           
  1385                           ;MCAL_Layer/ADC/hal_adc.c: 296:             (TRISB |= (((uint8)1) << 0x2));
  1386   0013E2  8493               	bsf	147,2,c	;volatile
  1387                           
  1388                           ;MCAL_Layer/ADC/hal_adc.c: 297:             break;
  1389   0013E4  EF41  F00A         	goto	l434
  1390   0013E8                     l2184:
  1391                           
  1392                           ;MCAL_Layer/ADC/hal_adc.c: 299:             (TRISB |= (((uint8)1) << 0x3));
  1393   0013E8  8693               	bsf	147,3,c	;volatile
  1394                           
  1395                           ;MCAL_Layer/ADC/hal_adc.c: 300:             break;
  1396   0013EA  EF41  F00A         	goto	l434
  1397   0013EE                     l2186:
  1398                           
  1399                           ;MCAL_Layer/ADC/hal_adc.c: 302:             (TRISB |= (((uint8)1) << 0x1));
  1400   0013EE  8293               	bsf	147,1,c	;volatile
  1401                           
  1402                           ;MCAL_Layer/ADC/hal_adc.c: 303:             break;
  1403   0013F0  EF41  F00A         	goto	l434
  1404   0013F4                     l2188:
  1405                           
  1406                           ;MCAL_Layer/ADC/hal_adc.c: 305:             (TRISB |= (((uint8)1) << 0x4));
  1407   0013F4  8893               	bsf	147,4,c	;volatile
  1408                           
  1409                           ;MCAL_Layer/ADC/hal_adc.c: 306:             break;
  1410   0013F6  EF41  F00A         	goto	l434
  1411   0013FA                     l2190:
  1412                           
  1413                           ;MCAL_Layer/ADC/hal_adc.c: 308:             (TRISB |= (((uint8)1) << 0x0));
  1414   0013FA  8093               	bsf	147,0,c	;volatile
  1415                           
  1416                           ;MCAL_Layer/ADC/hal_adc.c: 309:             break;
  1417   0013FC  EF41  F00A         	goto	l434
  1418   001400                     l2192:
  1419   001400  5071               	movf	adc_input_channel_port_configure@channel^0,w,c
  1420   001402  6E6F               	movwf	??_adc_input_channel_port_configure^0,c
  1421   001404  6A70               	clrf	(??_adc_input_channel_port_configure+1)^0,c
  1422                           
  1423                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1424                           ; Switch size 1, requested type "simple"
  1425                           ; Number of cases is 1, Range of values is 0 to 0
  1426                           ; switch strategies available:
  1427                           ; Name         Instructions Cycles
  1428                           ; simple_byte            4     3 (average)
  1429                           ;	Chosen strategy is simple_byte
  1430   001406  5070               	movf	(??_adc_input_channel_port_configure+1)^0,w,c
  1431   001408  0A00               	xorlw	0	; case 0
  1432   00140A  B4D8               	btfsc	status,2,c
  1433   00140C  EF0A  F00A         	goto	l4488
  1434   001410  EF41  F00A         	goto	l434
  1435   001414                     l4488:
  1436                           
  1437                           ; Switch size 1, requested type "simple"
  1438                           ; Number of cases is 13, Range of values is 0 to 12
  1439                           ; switch strategies available:
  1440                           ; Name         Instructions Cycles
  1441                           ; simple_byte           40    21 (average)
  1442                           ;	Chosen strategy is simple_byte
  1443   001414  506F               	movf	??_adc_input_channel_port_configure^0,w,c
  1444   001416  0A00               	xorlw	0	; case 0
  1445   001418  B4D8               	btfsc	status,2,c
  1446   00141A  EFD9  F009         	goto	l2166
  1447   00141E  0A01               	xorlw	1	; case 1
  1448   001420  B4D8               	btfsc	status,2,c
  1449   001422  EFDC  F009         	goto	l2168
  1450   001426  0A03               	xorlw	3	; case 2
  1451   001428  B4D8               	btfsc	status,2,c
  1452   00142A  EFDF  F009         	goto	l2170
  1453   00142E  0A01               	xorlw	1	; case 3
  1454   001430  B4D8               	btfsc	status,2,c
  1455   001432  EFE2  F009         	goto	l2172
  1456   001436  0A07               	xorlw	7	; case 4
  1457   001438  B4D8               	btfsc	status,2,c
  1458   00143A  EFE5  F009         	goto	l2174
  1459   00143E  0A01               	xorlw	1	; case 5
  1460   001440  B4D8               	btfsc	status,2,c
  1461   001442  EFE8  F009         	goto	l2176
  1462   001446  0A03               	xorlw	3	; case 6
  1463   001448  B4D8               	btfsc	status,2,c
  1464   00144A  EFEB  F009         	goto	l2178
  1465   00144E  0A01               	xorlw	1	; case 7
  1466   001450  B4D8               	btfsc	status,2,c
  1467   001452  EFEE  F009         	goto	l2180
  1468   001456  0A0F               	xorlw	15	; case 8
  1469   001458  B4D8               	btfsc	status,2,c
  1470   00145A  EFF1  F009         	goto	l2182
  1471   00145E  0A01               	xorlw	1	; case 9
  1472   001460  B4D8               	btfsc	status,2,c
  1473   001462  EFF4  F009         	goto	l2184
  1474   001466  0A03               	xorlw	3	; case 10
  1475   001468  B4D8               	btfsc	status,2,c
  1476   00146A  EFF7  F009         	goto	l2186
  1477   00146E  0A01               	xorlw	1	; case 11
  1478   001470  B4D8               	btfsc	status,2,c
  1479   001472  EFFA  F009         	goto	l2188
  1480   001476  0A07               	xorlw	7	; case 12
  1481   001478  B4D8               	btfsc	status,2,c
  1482   00147A  EFFD  F009         	goto	l2190
  1483   00147E  EF41  F00A         	goto	l434
  1484   001482                     l434:
  1485   001482  0012               	return		;funcret
  1486   001484                     __end_of_adc_input_channel_port_configure:
  1487                           	callstack 0
  1488                           
  1489 ;; *************** function _ADC_GetConversionResult *****************
  1490 ;; Defined at:
  1491 ;;		line 191 in file "MCAL_Layer/ADC/hal_adc.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  _adc            2    1[COMRAM] PTR const struct .
  1494 ;;		 -> adc_1(6), 
  1495 ;;  conversion_R    2    3[COMRAM] PTR unsigned short 
  1496 ;;		 -> conversion_Result_AN3(2), conversion_Result_AN2(2), conversion_Result_AN1(2), conversion_Result_AN0(2), 
  1497 ;; Auto vars:     Size  Location     Type
  1498 ;;  ret             1    8[COMRAM] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;                  1    wreg      unsigned char 
  1501 ;; Registers used:
  1502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;Total ram usage:        8 bytes
  1513 ;; Hardware stack levels used: 1
  1514 ;; Hardware stack levels required when called: 2
  1515 ;; This function calls:
  1516 ;;		Nothing
  1517 ;; This function is called by:
  1518 ;;		_ADC_GetConversion_Blocking
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text8
  1523   001484                     __ptext8:
  1524                           	callstack 0
  1525   001484                     _ADC_GetConversionResult:
  1526                           	callstack 27
  1527   001484                     
  1528                           ;MCAL_Layer/ADC/hal_adc.c: 191: Std_ReturnType ADC_GetConversionResult(const adc_config_
      +                          t * _adc , adc_result_t *conversion_Result);MCAL_Layer/ADC/hal_adc.c: 192: {;MCAL_Layer/
      +                          ADC/hal_adc.c: 193:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1529   001484  0E01               	movlw	1
  1530   001486  6E76               	movwf	ADC_GetConversionResult@ret^0,c
  1531   001488                     
  1532                           ;MCAL_Layer/ADC/hal_adc.c: 195:     if((((void*)0) == _adc) || (((void*)0) == conversion
      +                          _Result))
  1533   001488  506F               	movf	ADC_GetConversionResult@_adc^0,w,c
  1534   00148A  1070               	iorwf	(ADC_GetConversionResult@_adc+1)^0,w,c
  1535   00148C  B4D8               	btfsc	status,2,c
  1536   00148E  EF4B  F00A         	goto	u3111
  1537   001492  EF4D  F00A         	goto	u3110
  1538   001496                     u3111:
  1539   001496  EF56  F00A         	goto	l4346
  1540   00149A                     u3110:
  1541   00149A  5071               	movf	ADC_GetConversionResult@conversion_Result^0,w,c
  1542   00149C  1072               	iorwf	(ADC_GetConversionResult@conversion_Result+1)^0,w,c
  1543   00149E  A4D8               	btfss	status,2,c
  1544   0014A0  EF54  F00A         	goto	u3121
  1545   0014A4  EF56  F00A         	goto	u3120
  1546   0014A8                     u3121:
  1547   0014A8  EF5A  F00A         	goto	l4348
  1548   0014AC                     u3120:
  1549   0014AC                     l4346:
  1550                           
  1551                           ;MCAL_Layer/ADC/hal_adc.c: 196:     {;MCAL_Layer/ADC/hal_adc.c: 197:         ret = (Std_
      +                          ReturnType)0x00;
  1552   0014AC  0E00               	movlw	0
  1553   0014AE  6E76               	movwf	ADC_GetConversionResult@ret^0,c
  1554                           
  1555                           ;MCAL_Layer/ADC/hal_adc.c: 198:     }
  1556   0014B0  EFA2  F00A         	goto	l4358
  1557   0014B4                     l4348:
  1558                           
  1559                           ;MCAL_Layer/ADC/hal_adc.c: 200:     {;MCAL_Layer/ADC/hal_adc.c: 201:         if( 0x01U =
      +                          = _adc->result_format)
  1560   0014B4  EE20 F005          	lfsr	2,5
  1561   0014B8  506F               	movf	ADC_GetConversionResult@_adc^0,w,c
  1562   0014BA  26D9               	addwf	fsr2l,f,c
  1563   0014BC  5070               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  1564   0014BE  22DA               	addwfc	fsr2h,f,c
  1565   0014C0  A2DF               	btfss	indf2,1,c
  1566   0014C2  EF65  F00A         	goto	u3131
  1567   0014C6  EF67  F00A         	goto	u3130
  1568   0014CA                     u3131:
  1569   0014CA  EF7B  F00A         	goto	l4352
  1570   0014CE                     u3130:
  1571   0014CE                     l4350:
  1572                           
  1573                           ;MCAL_Layer/ADC/hal_adc.c: 202:         {;MCAL_Layer/ADC/hal_adc.c: 203:             *co
      +                          nversion_Result = (adc_result_t)((ADRESH <<8)+ADRESL);
  1574   0014CE  50C3               	movf	195,w,c	;volatile
  1575   0014D0  CFC4 F073          	movff	4036,??_ADC_GetConversionResult	;volatile
  1576   0014D4  6A74               	clrf	(??_ADC_GetConversionResult+1)^0,c
  1577   0014D6  C073  F074         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  1578   0014DA  6A73               	clrf	??_ADC_GetConversionResult^0,c
  1579   0014DC  2673               	addwf	??_ADC_GetConversionResult^0,f,c
  1580   0014DE  0E00               	movlw	0
  1581   0014E0  2274               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  1582   0014E2  C071  FFD9         	movff	ADC_GetConversionResult@conversion_Result,fsr2l
  1583   0014E6  C072  FFDA         	movff	ADC_GetConversionResult@conversion_Result+1,fsr2h
  1584   0014EA  C073  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  1585   0014EE  C074  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  1586                           
  1587                           ;MCAL_Layer/ADC/hal_adc.c: 204:         }
  1588   0014F2  EFA2  F00A         	goto	l4358
  1589   0014F6                     l4352:
  1590   0014F6  EE20 F005          	lfsr	2,5
  1591   0014FA  506F               	movf	ADC_GetConversionResult@_adc^0,w,c
  1592   0014FC  26D9               	addwf	fsr2l,f,c
  1593   0014FE  5070               	movf	(ADC_GetConversionResult@_adc+1)^0,w,c
  1594   001500  22DA               	addwfc	fsr2h,f,c
  1595   001502  B2DF               	btfsc	indf2,1,c
  1596   001504  EF86  F00A         	goto	u3141
  1597   001508  EF88  F00A         	goto	u3140
  1598   00150C                     u3141:
  1599   00150C  EF67  F00A         	goto	l4350
  1600   001510                     u3140:
  1601   001510                     
  1602                           ;MCAL_Layer/ADC/hal_adc.c: 206:         {;MCAL_Layer/ADC/hal_adc.c: 207:             *co
      +                          nversion_Result = (adc_result_t)(((ADRESH <<8)+ADRESL)>>6);
  1603   001510  50C3               	movf	195,w,c	;volatile
  1604   001512  CFC4 F073          	movff	4036,??_ADC_GetConversionResult	;volatile
  1605   001516  6A74               	clrf	(??_ADC_GetConversionResult+1)^0,c
  1606   001518  C073  F074         	movff	??_ADC_GetConversionResult,??_ADC_GetConversionResult+1
  1607   00151C  6A73               	clrf	??_ADC_GetConversionResult^0,c
  1608   00151E  2673               	addwf	??_ADC_GetConversionResult^0,f,c
  1609   001520  0E00               	movlw	0
  1610   001522  2274               	addwfc	(??_ADC_GetConversionResult+1)^0,f,c
  1611   001524  0E06               	movlw	6
  1612   001526  6E75               	movwf	(??_ADC_GetConversionResult+2)^0,c
  1613   001528                     u3155:
  1614   001528  3474               	rlcf	(??_ADC_GetConversionResult+1)^0,w,c
  1615   00152A  3274               	rrcf	(??_ADC_GetConversionResult+1)^0,f,c
  1616   00152C  3273               	rrcf	??_ADC_GetConversionResult^0,f,c
  1617   00152E  2E75               	decfsz	(??_ADC_GetConversionResult+2)^0,f,c
  1618   001530  EF94  F00A         	goto	u3155
  1619   001534  C071  FFD9         	movff	ADC_GetConversionResult@conversion_Result,fsr2l
  1620   001538  C072  FFDA         	movff	ADC_GetConversionResult@conversion_Result+1,fsr2h
  1621   00153C  C073  FFDE         	movff	??_ADC_GetConversionResult,postinc2
  1622   001540  C074  FFDD         	movff	??_ADC_GetConversionResult+1,postdec2
  1623   001544                     l4358:
  1624                           
  1625                           ;MCAL_Layer/ADC/hal_adc.c: 216:     return ret;
  1626   001544  5076               	movf	ADC_GetConversionResult@ret^0,w,c
  1627   001546  0012               	return		;funcret
  1628   001548                     __end_of_ADC_GetConversionResult:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _InterruptManagerHigh *****************
  1632 ;; Defined at:
  1633 ;;		line 304 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 1
  1654 ;; This function calls:
  1655 ;;		_ADC_ISR
  1656 ;;		_EUSART_RX_ISR
  1657 ;;		_EUSART_TX_ISR
  1658 ;;		_INT0_ISR
  1659 ;;		_INT1_ISR
  1660 ;;		_INT2_ISR
  1661 ;;		_MSSP_I2C_BC_ISR
  1662 ;;		_MSSP_I2C_ISR
  1663 ;;		_RB4_ISR
  1664 ;;		_RB5_ISR
  1665 ;;		_RB6_ISR
  1666 ;;		_RB7_ISR
  1667 ;;		_TMR0_ISR
  1668 ;;		_TMR1_ISR
  1669 ;;		_TMR2_ISR
  1670 ;;		_TMR3_ISR
  1671 ;; This function is called by:
  1672 ;;		Interrupt level 2
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	intcode
  1677   000008                     __pintcode:
  1678                           	callstack 0
  1679   000008                     _InterruptManagerHigh:
  1680                           	callstack 26
  1681                           
  1682                           ;incstack = 0
  1683   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1684   00000A  ED03  F008         	call	int_func,f	;refresh shadow registers
  1685                           
  1686                           	psect	intcode_body
  1687   001006                     __pintcode_body:
  1688                           	callstack 26
  1689   001006                     int_func:
  1690                           	callstack 26
  1691   001006  0006               	pop		; remove dummy address from shadow register refresh
  1692   001008                     
  1693                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 306:     if ((1 == INTCONbits.INT0E) && 
      +                          (1== INTCONbits.INT0F))
  1694   001008  A8F2               	btfss	242,4,c	;volatile
  1695   00100A  EF09  F008         	goto	i2u159_41
  1696   00100E  EF0B  F008         	goto	i2u159_40
  1697   001012                     i2u159_41:
  1698   001012  EF14  F008         	goto	i2l896
  1699   001016                     i2u159_40:
  1700   001016  A2F2               	btfss	242,1,c	;volatile
  1701   001018  EF10  F008         	goto	i2u160_41
  1702   00101C  EF12  F008         	goto	i2u160_40
  1703   001020                     i2u160_41:
  1704   001020  EF14  F008         	goto	i2l896
  1705   001024                     i2u160_40:
  1706   001024                     
  1707                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 307:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 308:         INT0_ISR();
  1708   001024  EC94  F00C         	call	_INT0_ISR	;wreg free
  1709   001028                     i2l896:
  1710                           
  1711                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 315:     if ((1 == INTCON3bits.INT1E) &&
      +                           (1== INTCON3bits.INT1F))
  1712   001028  A6F0               	btfss	240,3,c	;volatile
  1713   00102A  EF19  F008         	goto	i2u161_41
  1714   00102E  EF1B  F008         	goto	i2u161_40
  1715   001032                     i2u161_41:
  1716   001032  EF24  F008         	goto	i2l898
  1717   001036                     i2u161_40:
  1718   001036  A0F0               	btfss	240,0,c	;volatile
  1719   001038  EF20  F008         	goto	i2u162_41
  1720   00103C  EF22  F008         	goto	i2u162_40
  1721   001040                     i2u162_41:
  1722   001040  EF24  F008         	goto	i2l898
  1723   001044                     i2u162_40:
  1724   001044                     
  1725                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 316:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 317:         INT1_ISR();
  1726   001044  EC92  F00C         	call	_INT1_ISR	;wreg free
  1727   001048                     i2l898:
  1728                           
  1729                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 325:     if ((1 == INTCON3bits.INT2E) &&
      +                           (1== INTCON3bits.INT2F))
  1730   001048  A8F0               	btfss	240,4,c	;volatile
  1731   00104A  EF29  F008         	goto	i2u163_41
  1732   00104E  EF2B  F008         	goto	i2u163_40
  1733   001052                     i2u163_41:
  1734   001052  EF34  F008         	goto	i2l900
  1735   001056                     i2u163_40:
  1736   001056  A2F0               	btfss	240,1,c	;volatile
  1737   001058  EF30  F008         	goto	i2u164_41
  1738   00105C  EF32  F008         	goto	i2u164_40
  1739   001060                     i2u164_41:
  1740   001060  EF34  F008         	goto	i2l900
  1741   001064                     i2u164_40:
  1742   001064                     
  1743                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 326:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 327:         INT2_ISR();
  1744   001064  EC90  F00C         	call	_INT2_ISR	;wreg free
  1745   001068                     i2l900:
  1746                           
  1747                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 336:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  1748   001068  A6F2               	btfss	242,3,c	;volatile
  1749   00106A  EF39  F008         	goto	i2u165_41
  1750   00106E  EF3B  F008         	goto	i2u165_40
  1751   001072                     i2u165_41:
  1752   001072  EF56  F008         	goto	i2l902
  1753   001076                     i2u165_40:
  1754   001076  A0F2               	btfss	242,0,c	;volatile
  1755   001078  EF40  F008         	goto	i2u166_41
  1756   00107C  EF42  F008         	goto	i2u166_40
  1757   001080                     i2u166_41:
  1758   001080  EF56  F008         	goto	i2l902
  1759   001084                     i2u166_40:
  1760   001084  A881               	btfss	129,4,c	;volatile
  1761   001086  EF47  F008         	goto	i2u167_41
  1762   00108A  EF49  F008         	goto	i2u167_40
  1763   00108E                     i2u167_41:
  1764   00108E  EF56  F008         	goto	i2l902
  1765   001092                     i2u167_40:
  1766   001092  0467               	decf	_RB4_Flag^0,w,c	;volatile
  1767   001094  A4D8               	btfss	status,2,c
  1768   001096  EF4F  F008         	goto	i2u168_41
  1769   00109A  EF51  F008         	goto	i2u168_40
  1770   00109E                     i2u168_41:
  1771   00109E  EF56  F008         	goto	i2l902
  1772   0010A2                     i2u168_40:
  1773   0010A2                     
  1774                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 338:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 339:         RB4_Flag = 0;
  1775   0010A2  0E00               	movlw	0
  1776   0010A4  6E67               	movwf	_RB4_Flag^0,c	;volatile
  1777   0010A6                     
  1778                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 340:         RB4_ISR(0x01);
  1779   0010A6  0E01               	movlw	1
  1780   0010A8  EC69  F00C         	call	_RB4_ISR
  1781   0010AC                     i2l902:
  1782                           
  1783                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 347:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  1784   0010AC  A6F2               	btfss	242,3,c	;volatile
  1785   0010AE  EF5B  F008         	goto	i2u169_41
  1786   0010B2  EF5D  F008         	goto	i2u169_40
  1787   0010B6                     i2u169_41:
  1788   0010B6  EF78  F008         	goto	i2l904
  1789   0010BA                     i2u169_40:
  1790   0010BA  A0F2               	btfss	242,0,c	;volatile
  1791   0010BC  EF62  F008         	goto	i2u170_41
  1792   0010C0  EF64  F008         	goto	i2u170_40
  1793   0010C4                     i2u170_41:
  1794   0010C4  EF78  F008         	goto	i2l904
  1795   0010C8                     i2u170_40:
  1796   0010C8  B881               	btfsc	129,4,c	;volatile
  1797   0010CA  EF69  F008         	goto	i2u171_41
  1798   0010CE  EF6B  F008         	goto	i2u171_40
  1799   0010D2                     i2u171_41:
  1800   0010D2  EF78  F008         	goto	i2l904
  1801   0010D6                     i2u171_40:
  1802   0010D6  5067               	movf	_RB4_Flag^0,w,c	;volatile
  1803   0010D8  A4D8               	btfss	status,2,c
  1804   0010DA  EF71  F008         	goto	i2u172_41
  1805   0010DE  EF73  F008         	goto	i2u172_40
  1806   0010E2                     i2u172_41:
  1807   0010E2  EF78  F008         	goto	i2l904
  1808   0010E6                     i2u172_40:
  1809   0010E6                     
  1810                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 349:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 350:         RB4_Flag = 1;
  1811   0010E6  0E01               	movlw	1
  1812   0010E8  6E67               	movwf	_RB4_Flag^0,c	;volatile
  1813   0010EA                     
  1814                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 351:         RB4_ISR(0x00);
  1815   0010EA  0E00               	movlw	0
  1816   0010EC  EC69  F00C         	call	_RB4_ISR
  1817   0010F0                     i2l904:
  1818                           
  1819                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 360:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  1820   0010F0  A6F2               	btfss	242,3,c	;volatile
  1821   0010F2  EF7D  F008         	goto	i2u173_41
  1822   0010F6  EF7F  F008         	goto	i2u173_40
  1823   0010FA                     i2u173_41:
  1824   0010FA  EF9A  F008         	goto	i2l906
  1825   0010FE                     i2u173_40:
  1826   0010FE  A0F2               	btfss	242,0,c	;volatile
  1827   001100  EF84  F008         	goto	i2u174_41
  1828   001104  EF86  F008         	goto	i2u174_40
  1829   001108                     i2u174_41:
  1830   001108  EF9A  F008         	goto	i2l906
  1831   00110C                     i2u174_40:
  1832   00110C  AA81               	btfss	129,5,c	;volatile
  1833   00110E  EF8B  F008         	goto	i2u175_41
  1834   001112  EF8D  F008         	goto	i2u175_40
  1835   001116                     i2u175_41:
  1836   001116  EF9A  F008         	goto	i2l906
  1837   00111A                     i2u175_40:
  1838   00111A  0466               	decf	_RB5_Flag^0,w,c	;volatile
  1839   00111C  A4D8               	btfss	status,2,c
  1840   00111E  EF93  F008         	goto	i2u176_41
  1841   001122  EF95  F008         	goto	i2u176_40
  1842   001126                     i2u176_41:
  1843   001126  EF9A  F008         	goto	i2l906
  1844   00112A                     i2u176_40:
  1845   00112A                     
  1846                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 362:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 363:         RB5_Flag = 0;
  1847   00112A  0E00               	movlw	0
  1848   00112C  6E66               	movwf	_RB5_Flag^0,c	;volatile
  1849   00112E                     
  1850                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 364:         RB5_ISR(0x01);
  1851   00112E  0E01               	movlw	1
  1852   001130  EC5C  F00C         	call	_RB5_ISR
  1853   001134                     i2l906:
  1854                           
  1855                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 371:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  1856   001134  A6F2               	btfss	242,3,c	;volatile
  1857   001136  EF9F  F008         	goto	i2u177_41
  1858   00113A  EFA1  F008         	goto	i2u177_40
  1859   00113E                     i2u177_41:
  1860   00113E  EFBC  F008         	goto	i2l908
  1861   001142                     i2u177_40:
  1862   001142  A0F2               	btfss	242,0,c	;volatile
  1863   001144  EFA6  F008         	goto	i2u178_41
  1864   001148  EFA8  F008         	goto	i2u178_40
  1865   00114C                     i2u178_41:
  1866   00114C  EFBC  F008         	goto	i2l908
  1867   001150                     i2u178_40:
  1868   001150  BA81               	btfsc	129,5,c	;volatile
  1869   001152  EFAD  F008         	goto	i2u179_41
  1870   001156  EFAF  F008         	goto	i2u179_40
  1871   00115A                     i2u179_41:
  1872   00115A  EFBC  F008         	goto	i2l908
  1873   00115E                     i2u179_40:
  1874   00115E  5066               	movf	_RB5_Flag^0,w,c	;volatile
  1875   001160  A4D8               	btfss	status,2,c
  1876   001162  EFB5  F008         	goto	i2u180_41
  1877   001166  EFB7  F008         	goto	i2u180_40
  1878   00116A                     i2u180_41:
  1879   00116A  EFBC  F008         	goto	i2l908
  1880   00116E                     i2u180_40:
  1881   00116E                     
  1882                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 373:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 374:         RB5_Flag = 1;
  1883   00116E  0E01               	movlw	1
  1884   001170  6E66               	movwf	_RB5_Flag^0,c	;volatile
  1885   001172                     
  1886                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 375:         RB5_ISR(0x00);
  1887   001172  0E00               	movlw	0
  1888   001174  EC5C  F00C         	call	_RB5_ISR
  1889   001178                     i2l908:
  1890                           
  1891                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 384:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  1892   001178  A6F2               	btfss	242,3,c	;volatile
  1893   00117A  EFC1  F008         	goto	i2u181_41
  1894   00117E  EFC3  F008         	goto	i2u181_40
  1895   001182                     i2u181_41:
  1896   001182  EFDE  F008         	goto	i2l910
  1897   001186                     i2u181_40:
  1898   001186  A0F2               	btfss	242,0,c	;volatile
  1899   001188  EFC8  F008         	goto	i2u182_41
  1900   00118C  EFCA  F008         	goto	i2u182_40
  1901   001190                     i2u182_41:
  1902   001190  EFDE  F008         	goto	i2l910
  1903   001194                     i2u182_40:
  1904   001194  AC81               	btfss	129,6,c	;volatile
  1905   001196  EFCF  F008         	goto	i2u183_41
  1906   00119A  EFD1  F008         	goto	i2u183_40
  1907   00119E                     i2u183_41:
  1908   00119E  EFDE  F008         	goto	i2l910
  1909   0011A2                     i2u183_40:
  1910   0011A2  0465               	decf	_RB6_Flag^0,w,c	;volatile
  1911   0011A4  A4D8               	btfss	status,2,c
  1912   0011A6  EFD7  F008         	goto	i2u184_41
  1913   0011AA  EFD9  F008         	goto	i2u184_40
  1914   0011AE                     i2u184_41:
  1915   0011AE  EFDE  F008         	goto	i2l910
  1916   0011B2                     i2u184_40:
  1917   0011B2                     
  1918                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 386:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 387:         RB6_Flag = 0;
  1919   0011B2  0E00               	movlw	0
  1920   0011B4  6E65               	movwf	_RB6_Flag^0,c	;volatile
  1921   0011B6                     
  1922                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 388:         RB6_ISR(0x01);
  1923   0011B6  0E01               	movlw	1
  1924   0011B8  EC4F  F00C         	call	_RB6_ISR
  1925   0011BC                     i2l910:
  1926                           
  1927                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 395:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  1928   0011BC  A6F2               	btfss	242,3,c	;volatile
  1929   0011BE  EFE3  F008         	goto	i2u185_41
  1930   0011C2  EFE5  F008         	goto	i2u185_40
  1931   0011C6                     i2u185_41:
  1932   0011C6  EF00  F009         	goto	i2l912
  1933   0011CA                     i2u185_40:
  1934   0011CA  A0F2               	btfss	242,0,c	;volatile
  1935   0011CC  EFEA  F008         	goto	i2u186_41
  1936   0011D0  EFEC  F008         	goto	i2u186_40
  1937   0011D4                     i2u186_41:
  1938   0011D4  EF00  F009         	goto	i2l912
  1939   0011D8                     i2u186_40:
  1940   0011D8  BC81               	btfsc	129,6,c	;volatile
  1941   0011DA  EFF1  F008         	goto	i2u187_41
  1942   0011DE  EFF3  F008         	goto	i2u187_40
  1943   0011E2                     i2u187_41:
  1944   0011E2  EF00  F009         	goto	i2l912
  1945   0011E6                     i2u187_40:
  1946   0011E6  5065               	movf	_RB6_Flag^0,w,c	;volatile
  1947   0011E8  A4D8               	btfss	status,2,c
  1948   0011EA  EFF9  F008         	goto	i2u188_41
  1949   0011EE  EFFB  F008         	goto	i2u188_40
  1950   0011F2                     i2u188_41:
  1951   0011F2  EF00  F009         	goto	i2l912
  1952   0011F6                     i2u188_40:
  1953   0011F6                     
  1954                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 397:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 398:         RB6_Flag = 1;
  1955   0011F6  0E01               	movlw	1
  1956   0011F8  6E65               	movwf	_RB6_Flag^0,c	;volatile
  1957   0011FA                     
  1958                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 399:         RB6_ISR(0x00);
  1959   0011FA  0E00               	movlw	0
  1960   0011FC  EC4F  F00C         	call	_RB6_ISR
  1961   001200                     i2l912:
  1962                           
  1963                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 408:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  1964   001200  A6F2               	btfss	242,3,c	;volatile
  1965   001202  EF05  F009         	goto	i2u189_41
  1966   001206  EF07  F009         	goto	i2u189_40
  1967   00120A                     i2u189_41:
  1968   00120A  EF22  F009         	goto	i2l914
  1969   00120E                     i2u189_40:
  1970   00120E  A0F2               	btfss	242,0,c	;volatile
  1971   001210  EF0C  F009         	goto	i2u190_41
  1972   001214  EF0E  F009         	goto	i2u190_40
  1973   001218                     i2u190_41:
  1974   001218  EF22  F009         	goto	i2l914
  1975   00121C                     i2u190_40:
  1976   00121C  AE81               	btfss	129,7,c	;volatile
  1977   00121E  EF13  F009         	goto	i2u191_41
  1978   001222  EF15  F009         	goto	i2u191_40
  1979   001226                     i2u191_41:
  1980   001226  EF22  F009         	goto	i2l914
  1981   00122A                     i2u191_40:
  1982   00122A  0464               	decf	_RB7_Flag^0,w,c	;volatile
  1983   00122C  A4D8               	btfss	status,2,c
  1984   00122E  EF1B  F009         	goto	i2u192_41
  1985   001232  EF1D  F009         	goto	i2u192_40
  1986   001236                     i2u192_41:
  1987   001236  EF22  F009         	goto	i2l914
  1988   00123A                     i2u192_40:
  1989   00123A                     
  1990                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 410:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 411:         RB7_Flag = 0;
  1991   00123A  0E00               	movlw	0
  1992   00123C  6E64               	movwf	_RB7_Flag^0,c	;volatile
  1993   00123E                     
  1994                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 412:         RB7_ISR(0x01);
  1995   00123E  0E01               	movlw	1
  1996   001240  EC42  F00C         	call	_RB7_ISR
  1997   001244                     i2l914:
  1998                           
  1999                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 419:     if ((1 == INTCONbits.RBIE) && (
      +                          1== INTCONbits.RBIF) &&
  2000   001244  A6F2               	btfss	242,3,c	;volatile
  2001   001246  EF27  F009         	goto	i2u193_41
  2002   00124A  EF29  F009         	goto	i2u193_40
  2003   00124E                     i2u193_41:
  2004   00124E  EF44  F009         	goto	i2l916
  2005   001252                     i2u193_40:
  2006   001252  A0F2               	btfss	242,0,c	;volatile
  2007   001254  EF2E  F009         	goto	i2u194_41
  2008   001258  EF30  F009         	goto	i2u194_40
  2009   00125C                     i2u194_41:
  2010   00125C  EF44  F009         	goto	i2l916
  2011   001260                     i2u194_40:
  2012   001260  BE81               	btfsc	129,7,c	;volatile
  2013   001262  EF35  F009         	goto	i2u195_41
  2014   001266  EF37  F009         	goto	i2u195_40
  2015   00126A                     i2u195_41:
  2016   00126A  EF44  F009         	goto	i2l916
  2017   00126E                     i2u195_40:
  2018   00126E  5064               	movf	_RB7_Flag^0,w,c	;volatile
  2019   001270  A4D8               	btfss	status,2,c
  2020   001272  EF3D  F009         	goto	i2u196_41
  2021   001276  EF3F  F009         	goto	i2u196_40
  2022   00127A                     i2u196_41:
  2023   00127A  EF44  F009         	goto	i2l916
  2024   00127E                     i2u196_40:
  2025   00127E                     
  2026                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 421:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 422:         RB7_Flag = 1;
  2027   00127E  0E01               	movlw	1
  2028   001280  6E64               	movwf	_RB7_Flag^0,c	;volatile
  2029   001282                     
  2030                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 423:         RB7_ISR(0x00);
  2031   001282  0E00               	movlw	0
  2032   001284  EC42  F00C         	call	_RB7_ISR
  2033   001288                     i2l916:
  2034                           
  2035                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 434:     if ((1 == PIE1bits.ADIE) && (1 
      +                          == PIR1bits.ADIF ))
  2036   001288  AC9D               	btfss	157,6,c	;volatile
  2037   00128A  EF49  F009         	goto	i2u197_41
  2038   00128E  EF4B  F009         	goto	i2u197_40
  2039   001292                     i2u197_41:
  2040   001292  EF54  F009         	goto	i2l918
  2041   001296                     i2u197_40:
  2042   001296  AC9E               	btfss	158,6,c	;volatile
  2043   001298  EF50  F009         	goto	i2u198_41
  2044   00129C  EF52  F009         	goto	i2u198_40
  2045   0012A0                     i2u198_41:
  2046   0012A0  EF54  F009         	goto	i2l918
  2047   0012A4                     i2u198_40:
  2048   0012A4                     
  2049                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 435:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 436:         ADC_ISR();
  2050   0012A4  EC98  F00C         	call	_ADC_ISR	;wreg free
  2051   0012A8                     i2l918:
  2052                           
  2053                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 444:     if ((1 == INTCONbits.TMR0IE ) &
      +                          & (1 == INTCONbits.TMR0IF ))
  2054   0012A8  AAF2               	btfss	242,5,c	;volatile
  2055   0012AA  EF59  F009         	goto	i2u199_41
  2056   0012AE  EF5B  F009         	goto	i2u199_40
  2057   0012B2                     i2u199_41:
  2058   0012B2  EF64  F009         	goto	i2l920
  2059   0012B6                     i2u199_40:
  2060   0012B6  A4F2               	btfss	242,2,c	;volatile
  2061   0012B8  EF60  F009         	goto	i2u200_41
  2062   0012BC  EF62  F009         	goto	i2u200_40
  2063   0012C0                     i2u200_41:
  2064   0012C0  EF64  F009         	goto	i2l920
  2065   0012C4                     i2u200_40:
  2066   0012C4                     
  2067                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 445:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 446:         TMR0_ISR();
  2068   0012C4  EC82  F00C         	call	_TMR0_ISR	;wreg free
  2069   0012C8                     i2l920:
  2070                           
  2071                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 454:     if ((1 == PIE1bits.TMR1IE) && (
      +                          1 == PIR1bits.TMR1IF))
  2072   0012C8  A09D               	btfss	157,0,c	;volatile
  2073   0012CA  EF69  F009         	goto	i2u201_41
  2074   0012CE  EF6B  F009         	goto	i2u201_40
  2075   0012D2                     i2u201_41:
  2076   0012D2  EF74  F009         	goto	i2l922
  2077   0012D6                     i2u201_40:
  2078   0012D6  A09E               	btfss	158,0,c	;volatile
  2079   0012D8  EF70  F009         	goto	i2u202_41
  2080   0012DC  EF72  F009         	goto	i2u202_40
  2081   0012E0                     i2u202_41:
  2082   0012E0  EF74  F009         	goto	i2l922
  2083   0012E4                     i2u202_40:
  2084   0012E4                     
  2085                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 455:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 456:         TMR1_ISR();
  2086   0012E4  EC7C  F00C         	call	_TMR1_ISR	;wreg free
  2087   0012E8                     i2l922:
  2088                           
  2089                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 465:     if ((1 == PIE1bits.TMR2IE) && (
      +                          1 == PIR1bits.TMR2IF))
  2090   0012E8  A29D               	btfss	157,1,c	;volatile
  2091   0012EA  EF79  F009         	goto	i2u203_41
  2092   0012EE  EF7B  F009         	goto	i2u203_40
  2093   0012F2                     i2u203_41:
  2094   0012F2  EF84  F009         	goto	i2l924
  2095   0012F6                     i2u203_40:
  2096   0012F6  A29E               	btfss	158,1,c	;volatile
  2097   0012F8  EF80  F009         	goto	i2u204_41
  2098   0012FC  EF82  F009         	goto	i2u204_40
  2099   001300                     i2u204_41:
  2100   001300  EF84  F009         	goto	i2l924
  2101   001304                     i2u204_40:
  2102   001304                     
  2103                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 466:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 467:         TMR2_ISR();
  2104   001304  EC88  F00C         	call	_TMR2_ISR	;wreg free
  2105   001308                     i2l924:
  2106                           
  2107                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 476:     if ((1 == PIE2bits.TMR3IE) && (
      +                          1 == PIR2bits.TMR3IF))
  2108   001308  A2A0               	btfss	160,1,c	;volatile
  2109   00130A  EF89  F009         	goto	i2u205_41
  2110   00130E  EF8B  F009         	goto	i2u205_40
  2111   001312                     i2u205_41:
  2112   001312  EF94  F009         	goto	i2l926
  2113   001316                     i2u205_40:
  2114   001316  A2A1               	btfss	161,1,c	;volatile
  2115   001318  EF90  F009         	goto	i2u206_41
  2116   00131C  EF92  F009         	goto	i2u206_40
  2117   001320                     i2u206_41:
  2118   001320  EF94  F009         	goto	i2l926
  2119   001324                     i2u206_40:
  2120   001324                     
  2121                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 477:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 478:         TMR3_ISR();
  2122   001324  EC76  F00C         	call	_TMR3_ISR	;wreg free
  2123   001328                     i2l926:
  2124                           
  2125                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 487:     if ((1 == PIE1bits.TXIE) && (1 
      +                          == PIR1bits.TXIF))
  2126   001328  A89D               	btfss	157,4,c	;volatile
  2127   00132A  EF99  F009         	goto	i2u207_41
  2128   00132E  EF9B  F009         	goto	i2u207_40
  2129   001332                     i2u207_41:
  2130   001332  EFA4  F009         	goto	i2l928
  2131   001336                     i2u207_40:
  2132   001336  A89E               	btfss	158,4,c	;volatile
  2133   001338  EFA0  F009         	goto	i2u208_41
  2134   00133C  EFA2  F009         	goto	i2u208_40
  2135   001340                     i2u208_41:
  2136   001340  EFA4  F009         	goto	i2l928
  2137   001344                     i2u208_40:
  2138   001344                     
  2139                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 488:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 489:         EUSART_TX_ISR();
  2140   001344  EC96  F00C         	call	_EUSART_TX_ISR	;wreg free
  2141   001348                     i2l928:
  2142                           
  2143                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 498:     if ((1 == PIE1bits.RCIE) && (1 
      +                          == PIR1bits.RCIF))
  2144   001348  AA9D               	btfss	157,5,c	;volatile
  2145   00134A  EFA9  F009         	goto	i2u209_41
  2146   00134E  EFAB  F009         	goto	i2u209_40
  2147   001352                     i2u209_41:
  2148   001352  EFB4  F009         	goto	i2l930
  2149   001356                     i2u209_40:
  2150   001356  AA9E               	btfss	158,5,c	;volatile
  2151   001358  EFB0  F009         	goto	i2u210_41
  2152   00135C  EFB2  F009         	goto	i2u210_40
  2153   001360                     i2u210_41:
  2154   001360  EFB4  F009         	goto	i2l930
  2155   001364                     i2u210_40:
  2156   001364                     
  2157                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 499:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 500:         EUSART_RX_ISR();
  2158   001364  EC9A  F00C         	call	_EUSART_RX_ISR	;wreg free
  2159   001368                     i2l930:
  2160                           
  2161                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 509:     if ((1 == PIE1bits.SSPIE) && (1
      +                           == PIR1bits.SSPIF))
  2162   001368  A69D               	btfss	157,3,c	;volatile
  2163   00136A  EFB9  F009         	goto	i2u211_41
  2164   00136E  EFBB  F009         	goto	i2u211_40
  2165   001372                     i2u211_41:
  2166   001372  EFC4  F009         	goto	i2l932
  2167   001376                     i2u211_40:
  2168   001376  A69E               	btfss	158,3,c	;volatile
  2169   001378  EFC0  F009         	goto	i2u212_41
  2170   00137C  EFC2  F009         	goto	i2u212_40
  2171   001380                     i2u212_41:
  2172   001380  EFC4  F009         	goto	i2l932
  2173   001384                     i2u212_40:
  2174   001384                     
  2175                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 510:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 511:         MSSP_I2C_ISR();
  2176   001384  EC8C  F00C         	call	_MSSP_I2C_ISR	;wreg free
  2177   001388                     i2l932:
  2178                           
  2179                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 518:     if ((1 == PIE2bits.BCLIE) && (1
      +                           == PIR2bits.BCLIF))
  2180   001388  A6A0               	btfss	160,3,c	;volatile
  2181   00138A  EFC9  F009         	goto	i2u213_41
  2182   00138E  EFCB  F009         	goto	i2u213_40
  2183   001392                     i2u213_41:
  2184   001392  EFD4  F009         	goto	i2l935
  2185   001396                     i2u213_40:
  2186   001396  A6A1               	btfss	161,3,c	;volatile
  2187   001398  EFD0  F009         	goto	i2u214_41
  2188   00139C  EFD2  F009         	goto	i2u214_40
  2189   0013A0                     i2u214_41:
  2190   0013A0  EFD4  F009         	goto	i2l935
  2191   0013A4                     i2u214_40:
  2192   0013A4                     
  2193                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 519:     {;MCAL_Layer/Interrupt/mcal_int
      +                          errupt_manager.c: 520:         MSSP_I2C_BC_ISR();
  2194   0013A4  EC8E  F00C         	call	_MSSP_I2C_BC_ISR	;wreg free
  2195   0013A8                     i2l935:
  2196   0013A8  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2197   0013AA  0011               	retfie		f
  2198   0013AC                     __end_of_InterruptManagerHigh:
  2199                           	callstack 0
  2200                           
  2201 ;; *************** function _TMR3_ISR *****************
  2202 ;; Defined at:
  2203 ;;		line 163 in file "MCAL_Layer/Timers/hal_timer3.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;Total ram usage:        0 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_InterruptManagerHigh
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text10
  2231   0018EC                     __ptext10:
  2232                           	callstack 0
  2233   0018EC                     _TMR3_ISR:
  2234                           	callstack 26
  2235   0018EC                     
  2236                           ;MCAL_Layer/Timers/hal_timer3.c: 165:         (PIR2bits.TMR3IF = 0);
  2237   0018EC  92A1               	bcf	161,1,c	;volatile
  2238   0018EE                     
  2239                           ;MCAL_Layer/Timers/hal_timer3.c: 167:         TMR3H = (timer3_preload>>8);
  2240   0018EE  5010               	movf	(_timer3_preload+1)^0,w,c
  2241   0018F0  6EB3               	movwf	179,c	;volatile
  2242   0018F2                     
  2243                           ;MCAL_Layer/Timers/hal_timer3.c: 168:         TMR3L = (uint8)(timer3_preload);
  2244   0018F2  C00F  FFB2         	movff	_timer3_preload,4018	;volatile
  2245   0018F6  0012               	return		;funcret
  2246   0018F8                     __end_of_TMR3_ISR:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _TMR2_ISR *****************
  2250 ;; Defined at:
  2251 ;;		line 145 in file "MCAL_Layer/Timers/hal_timer2.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		None
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_InterruptManagerHigh
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text11
  2279   001910                     __ptext11:
  2280                           	callstack 0
  2281   001910                     _TMR2_ISR:
  2282                           	callstack 26
  2283   001910                     
  2284                           ;MCAL_Layer/Timers/hal_timer2.c: 147:         (PIR1bits.TMR2IF = 0);
  2285   001910  929E               	bcf	158,1,c	;volatile
  2286                           
  2287                           ;MCAL_Layer/Timers/hal_timer2.c: 149:         TMR2 = timer2_preload;
  2288   001912  C036  FFCC         	movff	_timer2_preload,4044	;volatile
  2289   001916  0012               	return		;funcret
  2290   001918                     __end_of_TMR2_ISR:
  2291                           	callstack 0
  2292                           
  2293 ;; *************** function _TMR1_ISR *****************
  2294 ;; Defined at:
  2295 ;;		line 163 in file "MCAL_Layer/Timers/hal_timer1.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;Total ram usage:        0 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; This function calls:
  2316 ;;		Nothing
  2317 ;; This function is called by:
  2318 ;;		_InterruptManagerHigh
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text12
  2323   0018F8                     __ptext12:
  2324                           	callstack 0
  2325   0018F8                     _TMR1_ISR:
  2326                           	callstack 26
  2327   0018F8                     
  2328                           ;MCAL_Layer/Timers/hal_timer1.c: 165:         (PIR1bits.TMR1IF = 0);
  2329   0018F8  909E               	bcf	158,0,c	;volatile
  2330   0018FA                     
  2331                           ;MCAL_Layer/Timers/hal_timer1.c: 167:         TMR1H = (timer1_preload>>8);
  2332   0018FA  5016               	movf	(_timer1_preload+1)^0,w,c
  2333   0018FC  6ECF               	movwf	207,c	;volatile
  2334   0018FE                     
  2335                           ;MCAL_Layer/Timers/hal_timer1.c: 168:         TMR1L = (uint8)(timer1_preload);
  2336   0018FE  C015  FFCE         	movff	_timer1_preload,4046	;volatile
  2337   001902  0012               	return		;funcret
  2338   001904                     __end_of_TMR1_ISR:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _TMR0_ISR *****************
  2342 ;; Defined at:
  2343 ;;		line 219 in file "MCAL_Layer/Timers/hal_timer0.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, status,2
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_InterruptManagerHigh
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text13
  2371   001904                     __ptext13:
  2372                           	callstack 0
  2373   001904                     _TMR0_ISR:
  2374                           	callstack 26
  2375   001904                     
  2376                           ;MCAL_Layer/Timers/hal_timer0.c: 221:         (INTCONbits.TMR0IF = 0);
  2377   001904  94F2               	bcf	242,2,c	;volatile
  2378   001906                     
  2379                           ;MCAL_Layer/Timers/hal_timer0.c: 223:         TMR0H = (timer0_preload>>8);
  2380   001906  501A               	movf	(_timer0_preload+1)^0,w,c
  2381   001908  6ED7               	movwf	215,c	;volatile
  2382   00190A                     
  2383                           ;MCAL_Layer/Timers/hal_timer0.c: 224:         TMR0L = (uint8)(timer0_preload);
  2384   00190A  C019  FFD6         	movff	_timer0_preload,4054	;volatile
  2385   00190E  0012               	return		;funcret
  2386   001910                     __end_of_TMR0_ISR:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _RB7_ISR *****************
  2390 ;; Defined at:
  2391 ;;		line 810 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  RB7_Source      1    wreg     unsigned char 
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;  RB7_Source      1    0[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;Total ram usage:        1 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_InterruptManagerHigh
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text14
  2419   001884                     __ptext14:
  2420                           	callstack 0
  2421   001884                     _RB7_ISR:
  2422                           	callstack 26
  2423                           
  2424                           ;incstack = 0
  2425                           ;RB7_ISR@RB7_Source stored from wreg
  2426   001884  6E6E               	movwf	RB7_ISR@RB7_Source^0,c
  2427   001886                     
  2428                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 810: void RB7_ISR(uint8 RB7_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 811: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 812:     (INTCONbits.RBIF=0);
  2429   001886  90F2               	bcf	242,0,c	;volatile
  2430   001888                     
  2431                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 814:     if(0x01 == RB7_Source)
  2432   001888  046E               	decf	RB7_ISR@RB7_Source^0,w,c
  2433   00188A  A4D8               	btfss	status,2,c
  2434   00188C  EF4A  F00C         	goto	i2u45_41
  2435   001890  EF4C  F00C         	goto	i2u45_40
  2436   001894                     i2u45_41:
  2437   001894  EF4E  F00C         	goto	i2l2602
  2438   001898                     i2u45_40:
  2439   001898  EF4E  F00C         	goto	i2l836
  2440   00189C                     i2l2602:
  2441   00189C                     i2l836:
  2442   00189C  0012               	return		;funcret
  2443   00189E                     __end_of_RB7_ISR:
  2444                           	callstack 0
  2445                           
  2446 ;; *************** function _RB6_ISR *****************
  2447 ;; Defined at:
  2448 ;;		line 771 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;  RB6_Source      1    wreg     unsigned char 
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;  RB6_Source      1    0[COMRAM] unsigned char 
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg, status,2, status,0
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2465 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2466 ;;Total ram usage:        1 bytes
  2467 ;; Hardware stack levels used: 1
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_InterruptManagerHigh
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text15
  2476   00189E                     __ptext15:
  2477                           	callstack 0
  2478   00189E                     _RB6_ISR:
  2479                           	callstack 26
  2480                           
  2481                           ;incstack = 0
  2482                           ;RB6_ISR@RB6_Source stored from wreg
  2483   00189E  6E6E               	movwf	RB6_ISR@RB6_Source^0,c
  2484   0018A0                     
  2485                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 771: void RB6_ISR(uint8 RB6_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 772: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 773:     (INTCONbits.RBIF=0);
  2486   0018A0  90F2               	bcf	242,0,c	;volatile
  2487   0018A2                     
  2488                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 775:     if(0x01 == RB6_Source)
  2489   0018A2  046E               	decf	RB6_ISR@RB6_Source^0,w,c
  2490   0018A4  A4D8               	btfss	status,2,c
  2491   0018A6  EF57  F00C         	goto	i2u44_41
  2492   0018AA  EF59  F00C         	goto	i2u44_40
  2493   0018AE                     i2u44_41:
  2494   0018AE  EF5B  F00C         	goto	i2l2588
  2495   0018B2                     i2u44_40:
  2496   0018B2  EF5B  F00C         	goto	i2l825
  2497   0018B6                     i2l2588:
  2498   0018B6                     i2l825:
  2499   0018B6  0012               	return		;funcret
  2500   0018B8                     __end_of_RB6_ISR:
  2501                           	callstack 0
  2502                           
  2503 ;; *************** function _RB5_ISR *****************
  2504 ;; Defined at:
  2505 ;;		line 732 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  RB5_Source      1    wreg     unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  RB5_Source      1    0[COMRAM] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2, status,0
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        1 bytes
  2524 ;; Hardware stack levels used: 1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_InterruptManagerHigh
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text16
  2533   0018B8                     __ptext16:
  2534                           	callstack 0
  2535   0018B8                     _RB5_ISR:
  2536                           	callstack 26
  2537                           
  2538                           ;incstack = 0
  2539                           ;RB5_ISR@RB5_Source stored from wreg
  2540   0018B8  6E6E               	movwf	RB5_ISR@RB5_Source^0,c
  2541   0018BA                     
  2542                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 732: void RB5_ISR(uint8 RB5_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 733: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 734:     (INTCONbits.RBIF=0);
  2543   0018BA  90F2               	bcf	242,0,c	;volatile
  2544   0018BC                     
  2545                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 736:     if(0x01 == RB5_Source)
  2546   0018BC  046E               	decf	RB5_ISR@RB5_Source^0,w,c
  2547   0018BE  A4D8               	btfss	status,2,c
  2548   0018C0  EF64  F00C         	goto	i2u43_41
  2549   0018C4  EF66  F00C         	goto	i2u43_40
  2550   0018C8                     i2u43_41:
  2551   0018C8  EF68  F00C         	goto	i2l2574
  2552   0018CC                     i2u43_40:
  2553   0018CC  EF68  F00C         	goto	i2l814
  2554   0018D0                     i2l2574:
  2555   0018D0                     i2l814:
  2556   0018D0  0012               	return		;funcret
  2557   0018D2                     __end_of_RB5_ISR:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _RB4_ISR *****************
  2561 ;; Defined at:
  2562 ;;		line 693 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  RB4_Source      1    wreg     unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  RB4_Source      1    0[COMRAM] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;Total ram usage:        1 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_InterruptManagerHigh
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text17
  2590   0018D2                     __ptext17:
  2591                           	callstack 0
  2592   0018D2                     _RB4_ISR:
  2593                           	callstack 26
  2594                           
  2595                           ;incstack = 0
  2596                           ;RB4_ISR@RB4_Source stored from wreg
  2597   0018D2  6E6E               	movwf	RB4_ISR@RB4_Source^0,c
  2598   0018D4                     
  2599                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 693: void RB4_ISR(uint8 RB4_Source);MCA
      +                          L_Layer/Interrupt/mcal_external_interrupt.c: 694: {;MCAL_Layer/Interrupt/mcal_external_i
      +                          nterrupt.c: 695:     (INTCONbits.RBIF=0);
  2600   0018D4  90F2               	bcf	242,0,c	;volatile
  2601   0018D6                     
  2602                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 697:     if(0x01 == RB4_Source)
  2603   0018D6  046E               	decf	RB4_ISR@RB4_Source^0,w,c
  2604   0018D8  A4D8               	btfss	status,2,c
  2605   0018DA  EF71  F00C         	goto	i2u42_41
  2606   0018DE  EF73  F00C         	goto	i2u42_40
  2607   0018E2                     i2u42_41:
  2608   0018E2  EF75  F00C         	goto	i2l2560
  2609   0018E6                     i2u42_40:
  2610   0018E6  EF75  F00C         	goto	i2l803
  2611   0018EA                     i2l2560:
  2612   0018EA                     i2l803:
  2613   0018EA  0012               	return		;funcret
  2614   0018EC                     __end_of_RB4_ISR:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _MSSP_I2C_ISR *****************
  2618 ;; Defined at:
  2619 ;;		line 388 in file "MCAL_Layer/I2C/hal_i2c.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;		None
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		None
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;Total ram usage:        0 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_InterruptManagerHigh
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text18
  2647   001918                     __ptext18:
  2648                           	callstack 0
  2649   001918                     _MSSP_I2C_ISR:
  2650                           	callstack 26
  2651   001918                     
  2652                           ;MCAL_Layer/I2C/hal_i2c.c: 390:     (PIR1bits.SSPIF = 0);
  2653   001918  969E               	bcf	158,3,c	;volatile
  2654   00191A  0012               	return		;funcret
  2655   00191C                     __end_of_MSSP_I2C_ISR:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _MSSP_I2C_BC_ISR *****************
  2659 ;; Defined at:
  2660 ;;		line 401 in file "MCAL_Layer/I2C/hal_i2c.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		None
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_InterruptManagerHigh
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text19
  2688   00191C                     __ptext19:
  2689                           	callstack 0
  2690   00191C                     _MSSP_I2C_BC_ISR:
  2691                           	callstack 26
  2692   00191C                     
  2693                           ;MCAL_Layer/I2C/hal_i2c.c: 403:     (PIR2bits.BCLIF = 0);
  2694   00191C  96A1               	bcf	161,3,c	;volatile
  2695   00191E  0012               	return		;funcret
  2696   001920                     __end_of_MSSP_I2C_BC_ISR:
  2697                           	callstack 0
  2698                           
  2699 ;; *************** function _INT2_ISR *****************
  2700 ;; Defined at:
  2701 ;;		line 676 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		None
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_InterruptManagerHigh
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text20
  2729   001920                     __ptext20:
  2730                           	callstack 0
  2731   001920                     _INT2_ISR:
  2732                           	callstack 26
  2733   001920                     
  2734                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 678:     (INTCON3bits.INT2IF=0);
  2735   001920  92F0               	bcf	240,1,c	;volatile
  2736   001922  0012               	return		;funcret
  2737   001924                     __end_of_INT2_ISR:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _INT1_ISR *****************
  2741 ;; Defined at:
  2742 ;;		line 659 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		None
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:        0 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_InterruptManagerHigh
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text21
  2770   001924                     __ptext21:
  2771                           	callstack 0
  2772   001924                     _INT1_ISR:
  2773                           	callstack 26
  2774   001924                     
  2775                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 661:     (INTCON3bits.INT1IF=0);
  2776   001924  90F0               	bcf	240,0,c	;volatile
  2777   001926  0012               	return		;funcret
  2778   001928                     __end_of_INT1_ISR:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _INT0_ISR *****************
  2782 ;; Defined at:
  2783 ;;		line 642 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;		None
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		None
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;Total ram usage:        0 bytes
  2802 ;; Hardware stack levels used: 1
  2803 ;; This function calls:
  2804 ;;		Nothing
  2805 ;; This function is called by:
  2806 ;;		_InterruptManagerHigh
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text22
  2811   001928                     __ptext22:
  2812                           	callstack 0
  2813   001928                     _INT0_ISR:
  2814                           	callstack 26
  2815   001928                     
  2816                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 644:     (INTCONbits.INT0IF=0);
  2817   001928  92F2               	bcf	242,1,c	;volatile
  2818   00192A  0012               	return		;funcret
  2819   00192C                     __end_of_INT0_ISR:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _EUSART_TX_ISR *****************
  2823 ;; Defined at:
  2824 ;;		line 382 in file "MCAL_Layer/USART/hal_usart.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;		None
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;		None
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      void 
  2831 ;; Registers used:
  2832 ;;		None
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;Total ram usage:        0 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; This function calls:
  2845 ;;		Nothing
  2846 ;; This function is called by:
  2847 ;;		_InterruptManagerHigh
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text23
  2852   00192C                     __ptext23:
  2853                           	callstack 0
  2854   00192C                     _EUSART_TX_ISR:
  2855                           	callstack 26
  2856   00192C                     
  2857                           ;MCAL_Layer/USART/hal_usart.c: 384:    (PIE1bits.TXIE = 0);
  2858   00192C  989D               	bcf	157,4,c	;volatile
  2859   00192E  0012               	return		;funcret
  2860   001930                     __end_of_EUSART_TX_ISR:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function _EUSART_RX_ISR *****************
  2864 ;; Defined at:
  2865 ;;		line 395 in file "MCAL_Layer/USART/hal_usart.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;		None
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;		None
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1    wreg      void 
  2872 ;; Registers used:
  2873 ;;		wreg, status,2, status,0
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_InterruptManagerHigh
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text24
  2893   001934                     __ptext24:
  2894                           	callstack 0
  2895   001934                     _EUSART_RX_ISR:
  2896                           	callstack 26
  2897   001934  0012               	return		;funcret
  2898   001936                     __end_of_EUSART_RX_ISR:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function _ADC_ISR *****************
  2902 ;; Defined at:
  2903 ;;		line 354 in file "MCAL_Layer/ADC/hal_adc.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		None
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;Total ram usage:        0 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_InterruptManagerHigh
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text25
  2931   001930                     __ptext25:
  2932                           	callstack 0
  2933   001930                     _ADC_ISR:
  2934                           	callstack 26
  2935   001930                     
  2936                           ;MCAL_Layer/ADC/hal_adc.c: 356:         (PIR1bits.ADIF = 0);
  2937   001930  9C9E               	bcf	158,6,c	;volatile
  2938   001932  0012               	return		;funcret
  2939   001934                     __end_of_ADC_ISR:
  2940                           	callstack 0
  2941                           
  2942                           	psect	rparam
  2943   000000                     
  2944                           	psect	temp
  2945   00007E                     btemp:
  2946                           	callstack 0
  2947   00007E                     	ds	1
  2948   000000                     int$flags	set	btemp
  2949   000000                     wtemp8	set	btemp+1
  2950   000000                     ttemp5	set	btemp+1
  2951   000000                     ttemp6	set	btemp+4
  2952   000000                     ttemp7	set	btemp+8
  2953                           
  2954                           	psect	config
  2955                           
  2956                           ; Padding undefined space
  2957   300000                     	org	3145728
  2958   300000  FF                 	db	255
  2959                           
  2960                           ;Config register CONFIG1H @ 0x300001
  2961                           ;	Oscillator Selection bits
  2962                           ;	OSC = HS, HS oscillator
  2963                           ;	Fail-Safe Clock Monitor Enable bit
  2964                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2965                           ;	Internal/External Oscillator Switchover bit
  2966                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2967   300001                     	org	3145729
  2968   300001  02                 	db	2
  2969                           
  2970                           ;Config register CONFIG2L @ 0x300002
  2971                           ;	Power-up Timer Enable bit
  2972                           ;	PWRT = OFF, PWRT disabled
  2973                           ;	Brown-out Reset Enable bits
  2974                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2975                           ;	Brown Out Reset Voltage bits
  2976                           ;	BORV = 1, 
  2977   300002                     	org	3145730
  2978   300002  09                 	db	9
  2979                           
  2980                           ;Config register CONFIG2H @ 0x300003
  2981                           ;	Watchdog Timer Enable bit
  2982                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2983                           ;	Watchdog Timer Postscale Select bits
  2984                           ;	WDTPS = 32768, 1:32768
  2985   300003                     	org	3145731
  2986   300003  1E                 	db	30
  2987                           
  2988                           ; Padding undefined space
  2989   300004                     	org	3145732
  2990   300004  FF                 	db	255
  2991                           
  2992                           ;Config register CONFIG3H @ 0x300005
  2993                           ;	CCP2 MUX bit
  2994                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2995                           ;	PORTB A/D Enable bit
  2996                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2997                           ;	Low-Power Timer1 Oscillator Enable bit
  2998                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2999                           ;	MCLR Pin Enable bit
  3000                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3001   300005                     	org	3145733
  3002   300005  81                 	db	129
  3003                           
  3004                           ;Config register CONFIG4L @ 0x300006
  3005                           ;	Stack Full/Underflow Reset Enable bit
  3006                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3007                           ;	Single-Supply ICSP Enable bit
  3008                           ;	LVP = OFF, Single-Supply ICSP disabled
  3009                           ;	Extended Instruction Set Enable bit
  3010                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3011                           ;	Background Debugger Enable bit
  3012                           ;	DEBUG = 0x1, unprogrammed default
  3013   300006                     	org	3145734
  3014   300006  81                 	db	129
  3015                           
  3016                           ; Padding undefined space
  3017   300007                     	org	3145735
  3018   300007  FF                 	db	255
  3019                           
  3020                           ;Config register CONFIG5L @ 0x300008
  3021                           ;	Code Protection bit
  3022                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3023                           ;	Code Protection bit
  3024                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3025                           ;	Code Protection bit
  3026                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3027                           ;	Code Protection bit
  3028                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3029   300008                     	org	3145736
  3030   300008  0F                 	db	15
  3031                           
  3032                           ;Config register CONFIG5H @ 0x300009
  3033                           ;	Boot Block Code Protection bit
  3034                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3035                           ;	Data EEPROM Code Protection bit
  3036                           ;	CPD = OFF, Data EEPROM not code-protected
  3037   300009                     	org	3145737
  3038   300009  C0                 	db	192
  3039                           
  3040                           ;Config register CONFIG6L @ 0x30000A
  3041                           ;	Write Protection bit
  3042                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3043                           ;	Write Protection bit
  3044                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3045                           ;	Write Protection bit
  3046                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3047                           ;	Write Protection bit
  3048                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3049   30000A                     	org	3145738
  3050   30000A  0F                 	db	15
  3051                           
  3052                           ;Config register CONFIG6H @ 0x30000B
  3053                           ;	Configuration Register Write Protection bit
  3054                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3055                           ;	Boot Block Write Protection bit
  3056                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3057                           ;	Data EEPROM Write Protection bit
  3058                           ;	WRTD = OFF, Data EEPROM not write-protected
  3059   30000B                     	org	3145739
  3060   30000B  E0                 	db	224
  3061                           
  3062                           ;Config register CONFIG7L @ 0x30000C
  3063                           ;	Table Read Protection bit
  3064                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3065                           ;	Table Read Protection bit
  3066                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3067                           ;	Table Read Protection bit
  3068                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3069                           ;	Table Read Protection bit
  3070                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3071   30000C                     	org	3145740
  3072   30000C  0F                 	db	15
  3073                           
  3074                           ;Config register CONFIG7H @ 0x30000D
  3075                           ;	Boot Block Table Read Protection bit
  3076                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3077   30000D                     	org	3145741
  3078   30000D  40                 	db	64
  3079                           tosu	equ	0xFFF
  3080                           tosh	equ	0xFFE
  3081                           tosl	equ	0xFFD
  3082                           stkptr	equ	0xFFC
  3083                           pclatu	equ	0xFFB
  3084                           pclath	equ	0xFFA
  3085                           pcl	equ	0xFF9
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           prodh	equ	0xFF4
  3091                           prodl	equ	0xFF3
  3092                           indf0	equ	0xFEF
  3093                           postinc0	equ	0xFEE
  3094                           postdec0	equ	0xFED
  3095                           preinc0	equ	0xFEC
  3096                           plusw0	equ	0xFEB
  3097                           fsr0h	equ	0xFEA
  3098                           fsr0l	equ	0xFE9
  3099                           wreg	equ	0xFE8
  3100                           indf1	equ	0xFE7
  3101                           postinc1	equ	0xFE6
  3102                           postdec1	equ	0xFE5
  3103                           preinc1	equ	0xFE4
  3104                           plusw1	equ	0xFE3
  3105                           fsr1h	equ	0xFE2
  3106                           fsr1l	equ	0xFE1
  3107                           bsr	equ	0xFE0
  3108                           indf2	equ	0xFDF
  3109                           postinc2	equ	0xFDE
  3110                           postdec2	equ	0xFDD
  3111                           preinc2	equ	0xFDC
  3112                           plusw2	equ	0xFDB
  3113                           fsr2h	equ	0xFDA
  3114                           fsr2l	equ	0xFD9
  3115                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        63
    BSS         72
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15     125
    BANK0           128      0      26
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S4058$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S4058$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Clock_CFG@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S3195$I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Receive_Overflow	PTR FTN()void  size(2) Largest target is 0

    S3195$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3195$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    MSSP_I2C_Init@i2c_obj.I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    adc_1.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYN_RX_Init@_eusart.usart_rx_cfg.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYN_RX_Init@_eusart.usart_rx_cfg.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYN_RX_Init@_eusart.usart_rx_cfg.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYN_RX_Init@_eusart.usart_tx_cfg.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_ASYN_TX_Init@_eusart.usart_rx_cfg.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYN_TX_Init@_eusart.usart_rx_cfg.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYN_TX_Init@_eusart.usart_rx_cfg.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_ASYN_TX_Init@_eusart.usart_tx_cfg.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2628$EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Boud_Rate_Calculation@_eusart.usart_rx_cfg.EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S2628$EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Boud_Rate_Calculation@_eusart.usart_rx_cfg.EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 0

    S2628$EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Boud_Rate_Calculation@_eusart.usart_rx_cfg.EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2619$EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_Boud_Rate_Calculation@_eusart.usart_tx_cfg.EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR3_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2417$TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@_timer.TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR2_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2288$TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Init@_timer.TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Mode_Select@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR1_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2084$TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer.TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Register_Size_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_Select@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_Config@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TMR0_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1922$TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer.TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    INTX_Set_Interrupt_Handeler@intr_obj.EXT_InterruptHandeler	PTR FTN()void  size(2) Largest target is 0

    INT2_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT0_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTX_Pin_Init@intr_obj.EXT_InterruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTX_Clear_Flag@intr_obj.EXT_InterruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTX_Edge_Init@intr_obj.EXT_InterruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTX_Disable@intr_obj.EXT_InterruptHandeler	PTR FTN()void  size(2) Largest target is 0

    S1265$EXT_InterruptHandeler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTX_Enable@intr_obj.EXT_InterruptHandeler	PTR FTN()void  size(2) Largest target is 0

    RB7_Interrupt_Handeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_Interrupt_Handeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_Interrupt_Handeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_Interrupt_Handeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Interrupt_Handeler_Low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_Interrupt_Handeler_High	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1303$EXT_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBX_Init@intr_obj.EXT_InterruptHandeler_Low	PTR FTN()void  size(2) Largest target is 0

    S1303$EXT_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBX_Init@intr_obj.EXT_InterruptHandeler_High	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    configure_voltage_reference@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    configure_voltage_reference@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    select_result_format@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    select_result_format@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_GetConversion_Blocking@conversion_Result	PTR unsigned short  size(2) Largest target is 2
		 -> conversion_Result_AN3(COMRAM[2]), conversion_Result_AN2(COMRAM[2]), conversion_Result_AN1(COMRAM[2]), conversion_Result_AN0(COMRAM[2]), 

    ADC_GetConversion_Blocking@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_GetConversionResult@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_GetConversionResult@conversion_Result	PTR unsigned short  size(2) Largest target is 2
		 -> conversion_Result_AN3(COMRAM[2]), conversion_Result_AN2(COMRAM[2]), conversion_Result_AN1(COMRAM[2]), conversion_Result_AN0(COMRAM[2]), 

    ADC_GetConversionResult@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_StartConversion@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_SelectChannel@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    ADC_Interrupt_Handeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S662$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc.ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Init@_adc	PTR const struct . size(2) Largest target is 6
		 -> adc_1(COMRAM[6]), 

    sp__memset	PTR void  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_ADC_GetConversion_Blocking
    _ADC_Init->_adc_input_channel_port_configure
    _ADC_GetConversion_Blocking->_ADC_GetConversionResult
    _ADC_GetConversion_Blocking->_ADC_SelectChannel
    _ADC_SelectChannel->_adc_input_channel_port_configure

Critical Paths under _InterruptManagerHigh in COMRAM

    _InterruptManagerHigh->_RB4_ISR
    _InterruptManagerHigh->_RB5_ISR
    _InterruptManagerHigh->_RB6_ISR
    _InterruptManagerHigh->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2561
         _ADC_GetConversion_Blocking
                           _ADC_Init
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             4     2      2     531
                                              4 COMRAM     4     2      2
   _adc_input_channel_port_configure
        _configure_voltage_reference
               _select_result_format
 ---------------------------------------------------------------------------------
 (2) _select_result_format                                 2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _configure_voltage_reference                          2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion_Blocking                           6     1      5    2030
                                              9 COMRAM     6     1      5
            _ADC_GetConversionResult
                  _ADC_SelectChannel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  3     1      2     198
                                              1 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannel                                    5     2      3     409
                                              4 COMRAM     5     2      3
   _adc_input_channel_port_configure
 ---------------------------------------------------------------------------------
 (2) _adc_input_channel_port_configure                     3     3      0      15
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversionResult                              8     4      4     330
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterruptManagerHigh                                 0     0      0     120
                            _ADC_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR3_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _MSSP_I2C_BC_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_TX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_RX_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion_Blocking
     _ADC_GetConversionResult
     _ADC_SelectChannel
       _adc_input_channel_port_configure
     _ADC_StartConversion
   _ADC_Init
     _adc_input_channel_port_configure
     _configure_voltage_reference
     _select_result_format

 _InterruptManagerHigh (ROOT)
   _ADC_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      1A       5       20.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      7D       1       99.2%
BITBIGSFRhlhlhh     18      0       0      37        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRllhhhh      7      0       0      40        0.0%
BITBIGSFRlllhh       6      0       0      44        0.0%
BITBIGSFRhlhllh      5      0       0      38        0.0%
BITBIGSFRllhhhh      4      0       0      41        0.0%
BITBIGSFRllhllh      4      0       0      42        0.0%
BITBIGSFRllllh       4      0       0      45        0.0%
BITBIGSFRlllll       4      0       0      46        0.0%
BITBIGSFRhlhlll      1      0       0      39        0.0%
BITBIGSFRllhlll      1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      97      47        0.0%
DATA                 0      0      97       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Tue Jul 11 01:26:33 2023

                                _SSPSTATbits 0FC7                                _btn_low_state 005D  
                                        l400 1546                                          l410 1700  
                                        l407 16DA                                          l441 17E4  
                                        l434 1482                                          l380 1864  
                                        l452 179C                                          l445 1772  
                                        l365 1566                                          l382 1868  
                                        l454 17A0                                          l439 17E2  
                                        l367 1606                                          l377 181E  
                                        l449 1794          __end_of_configure_voltage_reference 17A2  
                _configure_voltage_reference 1758                                          _RC6 7C16  
                                        _RC7 7C17                       ??_InterruptManagerHigh 006F  
                            __end_of_ADC_ISR 1934                                          _ret 0035  
                        led_initialize@F3047 003E                                          wreg 0FE8  
                      relay_initialize@F3047 003A                              __end_of_RB4_ISR 18EC  
                            __end_of_RB5_ISR 18D2                              __end_of_RB6_ISR 18B8  
                            __end_of_RB7_ISR 189E                                         l1340 1616  
                                       l2170 13BE                                         l2180 13DC  
                                       l2172 13C4                                         l2164 13AE  
                                       l2190 13FA                                         l2182 13E2  
                                       l2174 13CA                                         l2166 13B2  
                                       l2184 13E8                                         l2176 13D0  
                                       l2168 13B8                                         l2192 1400  
                                       l2186 13EE                                         l2178 13D6  
                                       l2188 13F4                                         l4310 17DC  
                                       l4320 17FC                                         l4400 16BA  
                                       l4312 1758                                         l4304 17A2  
                                       l4322 1804                                         l4330 1846  
                                       l4402 16E8                                         l4314 177A  
                                       l4306 17BC                                         l4340 1484  
                                       l4324 1816                                         l4316 17E6  
                                       l4332 184A                                         l4404 16FE  
                                       l4308 17C2                                         l4350 14CE  
                                       l4342 1488                                         l4326 181C  
                                       l4318 17EA                                         l4334 185C  
                                       l4352 14F6                                         l4344 149A  
                                       l4336 1866                                         l4354 1510  
                                       l4346 14AC                                         l4370 15C0  
                                       l4362 1548                                         l4348 14B4  
                                       l4380 15DA                                         l4372 15D2  
                                       l4364 154C                                         l4358 1544  
                                       l4382 15EA                                         l4374 15D4  
                                       l4366 155E                                         l4392 168A  
                                       l4384 15F6                                         l4376 15D6  
                                       l4368 1568                                         l4480 1608  
                                       l4394 168E                                         l4386 1602  
                                       l4378 15D8                                         l4482 167E  
                                       l4396 16A0                                         l4388 1604  
                                       l4398 16B2                                         l4488 1414  
                                       STR_1 1001                                         u3100 185C  
                                       u3101 1858                                         _LATA 0F89  
                                       u3110 149A                                         _LATB 0F8A  
                                       u3111 1496                                         _LATC 0F8B  
                                       u3120 14AC                                         _LATD 0F8C  
                                       u3121 14A8                                         _LATE 0F8D  
                                       u3130 14CE                                         u3050 17BC  
                                       u3131 14CA                                         u3051 17B8  
                                       u3140 1510                                         u3060 17DC  
                                       u3141 150C                                         u3061 17D8  
                                       u3070 1772                                         u3071 176E  
                                       u3080 1794                                         u3160 155E  
                                       u3081 1790                                         u3161 155A  
                                       u3090 17FC                                         u3170 16A0  
                                       u3155 1528                                         u3091 17F8  
                                       u3171 169C                                         u3180 16B2  
                                       u3181 16AE                                         u3190 16E8  
                                       u3191 16E4                                         _TMR2 0FCC  
                                       _flag 007D                                         _main 1608  
                                       fsr2h 0FDA                                         indf2 0FDF  
                                       fsr1l 0FE1                                         fsr2l 0FD9  
                                       btemp 007E                             __end_of_ADC_Init 1608  
                                       start 000E                                 ___param_bank 0000  
                     button_initialize@F3049 0040                             __end_of_INT0_ISR 192C  
                           __end_of_INT1_ISR 1928                             __end_of_INT2_ISR 1924  
                              _EUSART_RX_ISR 1934                                _EUSART_TX_ISR 192C  
                                      ?_main 006E                                        _EEADR 0FA9  
                                      i2l459 1932                                        i2l803 18EA  
                                      i2l900 1068                                        i2l814 18D0  
                                      i2l910 11BC                                        i2l902 10AC  
                                      i2l920 12C8                                        i2l912 1200  
                                      i2l904 10F0                                        i2l825 18B6  
                                      i2l930 1368                                        i2l922 12E8  
                                      i2l914 1244                                        i2l906 1134  
                                      i2l836 189C                                        i2l932 1388  
                                      i2l924 1308                                        i2l916 1288  
                                      i2l908 1178                                        i2l782 192A  
                                      i2l926 1328                                        i2l918 12A8  
                                      i2l935 13A8                                        i2l792 1922  
                                      i2l928 1348                                        i2l787 1926  
                                      i2l896 1028                                        i2l898 1048  
                                      _RCREG 0FAE                          relay_turn_off@F3057 0038  
                                      _TMR0H 0FD7                                        _TMR1H 0FCF  
                                      _TMR0L 0FD6                                        _TMR1L 0FCE  
                                      _TMR3H 0FB3                                        _TMR3L 0FB2  
                                      _SPBRG 0FAF                                        _PORTA 0F80  
                                      _PORTB 0F81                                        _PORTC 0F82  
                                      _PORTD 0F83                                        _PORTE 0F84  
                                      _TRISA 0F92                                        _TRISB 0F93  
                                      _TRISC 0F94                                        _TRISD 0F95  
                                      _TRISE 0F96                                        _TXREG 0FAD  
                           __end_of_TMR0_ISR 1910                             __end_of_TMR1_ISR 1904  
                           __end_of_TMR2_ISR 1918                                        _adc_1 0068  
                           __end_of_TMR3_ISR 18F8                                        _lcd_1 0094  
                                      _lcd_2 0080                                        _led_1 0061  
                                      _led_2 0060                                        tablat 0FF5  
                                      ttemp5 007F                                        ttemp6 0082  
                                      ttemp7 0086                                        status 0FD8  
                                      wtemp8 007F                  _I2C_DefaultInterruptHandler 0003  
                            __initialization 1702                                 __end_of_main 168A  
                _RB6_Interrupt_Handeler_High 0023                                    ??_ADC_ISR 006E  
                             ?_EUSART_RX_ISR 006E                               ?_EUSART_TX_ISR 006E  
                              _lat_registers 0049                                       ??_main 007D  
                              __activetblptr 0003                             led_turn_on@F3052 003D  
                                  ??_RB4_ISR 006E                                    ??_RB5_ISR 006E  
                                  ??_RB6_ISR 006E                                    ??_RB7_ISR 006E  
                 _EUSART_OverrunErrorHandler 0007                                       _ADRESH 0FC4  
                                     _EEADRH 0FAA                                       _ADRESL 0FC3  
                                     _EEDATA 0FA8                                       _EECON2 0FA7  
                                     i2l1005 190E                                       i2l1102 1916  
                                     i2l1061 1902                                       i2l1160 18F6  
                                     i2l1290 192E                                       i2l1471 191E  
                                     i2l1466 191A                                       i2l2602 189C  
                                     i2l2610 1906                                       i2l1299 1934  
                                     i2l2540 1924                                       i2l2612 190A  
                                     i2l2620 18FA                                       i2l2534 1928  
                                     i2l2622 18FE                                       i2l2560 18EA  
                                     i2l2552 18D4                                       i2l2608 1904  
                                     i2l2650 1934                                       i2l2546 1920  
                                     i2l2554 18D6                                       i2l2618 18F8  
                                     i2l2634 18EC                                       i2l2644 192C  
                                     i2l2580 18A0                                       i2l2628 1910  
                                     i2l2636 18EE                                       i2l3700 11E6  
                                     i2l2662 1918                                       i2l2574 18D0  
                                     i2l2566 18BA                                       i2l2582 18A2  
                                     i2l2638 18F2                                       i2l3710 122A  
                                     i2l3702 11F6                                       i2l2568 18BC  
                                     i2l3720 126E                                       i2l3712 123A  
                                     i2l3704 11FA                                       i2l3640 1044  
                                     i2l3632 1008                                       i2l2498 1930  
                                     i2l2594 1886                                       i2l3730 12B6  
                                     i2l3722 127E                                       i2l3714 123E  
                                     i2l3706 120E                                       i2l3650 1092  
                                     i2l3642 1056                                       i2l3634 1016  
                                     i2l2668 191C                                       i2l2588 18B6  
                                     i2l2596 1888                                       i2l3740 1304  
                                     i2l3732 12C4                                       i2l3724 1282  
                                     i2l3716 1252                                       i2l3708 121C  
                                     i2l3660 10D6                                       i2l3652 10A2  
                                     i2l3644 1064                                       i2l3636 1024  
                                     i2l3750 1356                                       i2l3742 1316  
                                     i2l3734 12D6                                       i2l3726 1296  
                                     i2l3718 1260                                       i2l3670 111A  
                                     i2l3662 10E6                                       i2l3654 10A6  
                                     i2l3646 1076                                       i2l3638 1036  
                                     i2l3760 13A4                                       i2l3752 1364  
                                     i2l3744 1324                                       i2l3736 12E4  
                                     i2l3728 12A4                                       i2l3680 115E  
                                     i2l3672 112A                                       i2l3664 10EA  
                                     i2l3656 10BA                                       i2l3648 1084  
                                     i2l3754 1376                                       i2l3746 1336  
                                     i2l3738 12F6                                       i2l3690 11A2  
                                     i2l3682 116E                                       i2l3674 112E  
                                     i2l3666 10FE                                       i2l3658 10C8  
                                     i2l3756 1384                                       i2l3748 1344  
                                     i2l3692 11B2                                       i2l3684 1172  
                                     i2l3676 1142                                       i2l3668 110C  
                                     i2l3758 1396                                       i2l3694 11B6  
                                     i2l3686 1186                                       i2l3678 1150  
                                     i2l3696 11CA                                       i2l3688 1194  
                                     i2l3698 11D8                                       _SPBRGH 0FB0  
                                     _SSPADD 0FC8                                       _SSPBUF 0FC9  
          ADC_GetConversion_Blocking@channel 0079                                       clear_0 1748  
                                     isa$std 0001                                 __pdataCOMRAM 0049  
                                  ?_ADC_Init 0072                                 __mediumconst 0000  
                                     tblptrh 0FF7                                       tblptrl 0FF6  
                                     tblptru 0FF8                 __end_of_select_result_format 17E6  
                                 __accesstop 0080                      __end_of__initialization 174E  
                                  ?_INT0_ISR 006E                                    ?_INT1_ISR 006E  
                                  ?_INT2_ISR 006E                                ___rparam_used 0001  
                 _I2C_Report_Write_Collision 0005                            RB5_ISR@RB5_Source 006E  
                             __pcstackCOMRAM 006E                                 __pidataBANK0 186A  
                                  ?_TMR0_ISR 006E                              ??_EUSART_RX_ISR 006E  
                                  ?_TMR1_ISR 006E                                    ?_TMR2_ISR 006E  
                                  ?_TMR3_ISR 006E                              ??_EUSART_TX_ISR 006E  
               ??_ADC_GetConversion_Blocking 007C                   _RB6_Interrupt_Handeler_Low 0021  
                    _ADC_GetConversionResult 1484                                   ??_ADC_Init 0074  
                       ADC_SelectChannel@ret 0076                      _INT0_Interrupt_Handeler 0031  
                     ADC_StartConversion@ret 0071                                   ??_INT0_ISR 006E  
                                 ??_INT1_ISR 006E                                   ??_INT2_ISR 006E  
                                 __pnvCOMRAM 007D                   ADC_GetConversionResult@ret 0076  
                    _TMR1_Interrupt_Handeler 0017                       button_read_state@F3056 003F  
                                 ??_TMR0_ISR 006E                                   ??_TMR1_ISR 006E  
                                 ??_TMR2_ISR 006E                                   ??_TMR3_ISR 006E  
                          led_turn_off@F3057 003C                                      _ADC_ISR 1930  
             ADC_GetConversion_Blocking@_adc 0077                            RB7_ISR@RB7_Source 006E  
                                    _RB4_ISR 18D2                                      _RB5_ISR 18B8  
                                    _RB6_ISR 189E                                      _RB7_ISR 1884  
                              ?_MSSP_I2C_ISR 006E                         led_turn_toggle@F3062 003B  
                                    i2u42_40 18E6                                      i2u42_41 18E2  
                                    i2u43_40 18CC                                      i2u43_41 18C8  
                                    i2u44_40 18B2                                      i2u44_41 18AE  
                                    i2u45_40 1898                                      i2u45_41 1894  
                     relay_turn_toggle@F3062 0037                               _tris_registers 0053  
                          ??_MSSP_I2C_BC_ISR 006E                                      __Hparam 0000  
                               ADC_Init@_adc 0072                                      __Lparam 0000  
                               __psmallconst 1000                    ??_ADC_GetConversionResult 0073  
                                    __pcinit 1702                         _select_result_format 17A2  
                                    __ramtop 1000                                      __ptext0 1608  
                                    __ptext1 1548                                      __ptext2 17A2  
                                    __ptext3 1758                                      __ptext4 168A  
                                    __ptext5 1846                                      __ptext6 17E6  
                                    __ptext7 13AC                                      __ptext8 1484  
                                  _T0CONbits 0FD5                                      _btn_low 0062  
                                  _T1CONbits 0FCD                               ??_MSSP_I2C_ISR 006E  
                                  _T2CONbits 0FCA                                    _T3CONbits 0FB1  
                                    _relay_1 005F  ADC_GetConversion_Blocking@conversion_Result 007A  
                             __pintcode_body 1006                         end_of_initialization 174E  
                   select_result_format@_adc 006F                                      int_func 1006  
                _RB4_Interrupt_Handeler_High 002B                                    _RCSTAbits 0FAB  
         __end_of_ADC_GetConversion_Blocking 1702                   _ADC_GetConversion_Blocking 168A  
                                    postdec1 0FE5                                      postdec2 0FDD  
                                    postinc0 0FEE                                      postinc2 0FDE  
                      ?_select_result_format 006F                                    _PORTBbits 0F81  
                _RB7_Interrupt_Handeler_High 001F                                    _TRISCbits 0F94  
                        _ADC_StartConversion 1846                                    _TXSTAbits 0FAC  
                         relay_turn_on@F3052 0039                         ?_ADC_StartConversion 006F  
                                _BAUDCONbits 0FB8                                __pidataCOMRAM 1820  
    adc_input_channel_port_configure@channel 0071                               _timer0_preload 0019  
                             _timer1_preload 0015                               _timer2_preload 0036  
               ?_configure_voltage_reference 006F     ADC_GetConversionResult@conversion_Result 0071  
                        start_initialization 1702                               _timer3_preload 000F  
                      ADC_SelectChannel@_adc 0072                         __end_of_MSSP_I2C_ISR 191C  
                      ??_ADC_StartConversion 0071                   _EUSART_FramingErrorHandler 0009  
                 _RB5_Interrupt_Handeler_Low 0025                       ??_select_result_format 0071  
                                __pdataBANK0 0080                                     ?_ADC_ISR 006E  
                      __end_of_EUSART_RX_ISR 1936                        __end_of_EUSART_TX_ISR 1930  
                     _ADC_Interrupt_Handeler 0033                      ADC_StartConversion@_adc 006F  
                                   ?_RB4_ISR 006E                                     ?_RB5_ISR 006E  
                                   ?_RB6_ISR 006E                                     ?_RB7_ISR 006E  
                                __pbssCOMRAM 0001                ??_configure_voltage_reference 0071  
                            _MSSP_I2C_BC_ISR 191C                  ADC_GetConversionResult@_adc 006F  
                    _INT2_Interrupt_Handeler 002D                 _EUSART_TX_Interrupt_Handeler 000D  
                    _TMR0_Interrupt_Handeler 001B                      _TMR3_Interrupt_Handeler 0011  
               __end_of_InterruptManagerHigh 13AC                                    __pintcode 0008  
   __end_of_adc_input_channel_port_configure 1484           ??_adc_input_channel_port_configure 006F  
          ?_adc_input_channel_port_configure 006E             _adc_input_channel_port_configure 13AC  
                          _ADC_SelectChannel 17E6                ADC_GetConversion_Blocking@ret 007C  
                         ?_ADC_SelectChannel 0072                                  __smallconst 1000  
                        ??_ADC_SelectChannel 0075                                     _ADC_Init 1548  
                                ADC_Init@ret 0075                                     _INT0_ISR 1928  
                                   _INT1_ISR 1924                                     _INT2_ISR 1920  
                                   _RB4_Flag 0067                                     _RB5_Flag 0066  
                                   _RB6_Flag 0065                                     _RB7_Flag 0064  
                          RB4_ISR@RB4_Source 006E                                     _PIE1bits 0F9D  
                                   _PIE2bits 0FA0                    __end_of_ADC_SelectChannel 1820  
                                   i2u200_40 12C4                                     i2u200_41 12C0  
                                   i2u201_40 12D6                                     i2u201_41 12D2  
                                   i2u210_40 1364                                     i2u202_40 12E4  
                                   i2u210_41 1360                                     i2u202_41 12E0  
                                   i2u211_40 1376                                     i2u203_40 12F6  
                                   i2u211_41 1372                                     i2u203_41 12F2  
                                   i2u212_40 1384                                     i2u204_40 1304  
                                   i2u212_41 1380                                     i2u204_41 1300  
                                   i2u213_40 1396                                     i2u205_40 1316  
                                   i2u213_41 1392                                     i2u205_41 1312  
                                   i2u214_40 13A4                                     i2u206_40 1324  
                                   i2u214_41 13A0                                     i2u206_41 1320  
                                   i2u207_40 1336                                     i2u207_41 1332  
                                   i2u208_40 1344                                     i2u160_40 1024  
                                   i2u208_41 1340                                     i2u160_41 1020  
                                   i2u209_40 1356                                     i2u161_40 1036  
                                   i2u209_41 1352                                     i2u161_41 1032  
                                   i2u170_40 10C8                                     i2u162_40 1044  
                                   i2u170_41 10C4                                     i2u162_41 1040  
                                   i2u171_40 10D6                                     i2u163_40 1056  
                                   i2u171_41 10D2                                     i2u163_41 1052  
                                   i2u180_40 116E                                     i2u172_40 10E6  
                                   i2u164_40 1064                                     i2u180_41 116A  
                                   i2u172_41 10E2                                     i2u164_41 1060  
                                   i2u181_40 1186                                     i2u173_40 10FE  
                                   i2u165_40 1076                                     i2u181_41 1182  
                                   i2u173_41 10FA                                     i2u165_41 1072  
                                   i2u190_40 121C                                     i2u182_40 1194  
                                   i2u174_40 110C                                     i2u166_40 1084  
                                   i2u190_41 1218                                     i2u182_41 1190  
                                   i2u174_41 1108                                     i2u166_41 1080  
                                   i2u191_40 122A                                     i2u183_40 11A2  
                                   i2u175_40 111A                                     i2u167_40 1092  
                                   i2u159_40 1016                                     i2u191_41 1226  
                                   i2u183_41 119E                                     i2u175_41 1116  
                                   i2u167_41 108E                                     i2u159_41 1012  
                                   i2u192_40 123A                                     i2u184_40 11B2  
                                   i2u176_40 112A                                     i2u168_40 10A2  
                                   i2u192_41 1236                                     i2u184_41 11AE  
                                   i2u176_41 1126                                     i2u168_41 109E  
                                   i2u193_40 1252                                     i2u185_40 11CA  
                                   i2u177_40 1142                                     i2u169_40 10BA  
                                   i2u193_41 124E                                     i2u185_41 11C6  
                                   i2u177_41 113E                                     i2u169_41 10B6  
                                   _PIR1bits 0F9E                                     i2u194_40 1260  
                                   i2u186_40 11D8                                     i2u178_40 1150  
                                   i2u194_41 125C                                     i2u186_41 11D4  
                                   i2u178_41 114C                                     i2u195_40 126E  
                                   i2u187_40 11E6                                     i2u179_40 115E  
                                   i2u195_41 126A                                     i2u187_41 11E2  
                                   i2u179_41 115A                                     _PIR2bits 0FA1  
                                   i2u196_40 127E                                     i2u188_40 11F6  
                                   i2u196_41 127A                                     i2u188_41 11F2  
                                   i2u197_40 1296                                     i2u189_40 120E  
                                   i2u197_41 1292                                     i2u189_41 120A  
                                   i2u198_40 12A4                                     i2u198_41 12A0  
                                   i2u199_40 12B6                                     i2u199_41 12B2  
                ?_ADC_GetConversion_Blocking 0077                                     _TMR0_ISR 1904  
                                   _TMR1_ISR 18F8                                     _TMR2_ISR 1910  
                                   _TMR3_ISR 18EC                  _I2C_Report_Receive_Overflow 0001  
                                 _ADCON0bits 0FC2                                   _ADCON1bits 0FC1  
                                 _ADCON2bits 0FC0                      __end_of_MSSP_I2C_BC_ISR 1920  
                   ADC_SelectChannel@channel 0074                                  _INTCON2bits 0FF1  
                                _INTCON3bits 0FF0                                    copy_data0 1716  
                                  copy_data1 1736                                   _EECON1bits 0FA6  
                                   __Hrparam 0000                                     __Lrparam 0000  
                   ?_ADC_GetConversionResult 006F                  _RB5_Interrupt_Handeler_High 0027  
                          RB6_ISR@RB6_Source 006E                                 _MSSP_I2C_ISR 1918  
                       _InterruptManagerHigh 0008                                     __ptext10 18EC  
                                   __ptext11 1910                                     __ptext20 1920  
                                   __ptext12 18F8                                     __ptext21 1924  
                                   __ptext13 1904                                     __ptext22 1928  
                                   __ptext14 1884                                     __ptext23 192C  
                                   __ptext15 189E                                     __ptext24 1934  
                                   __ptext16 18B8                                     __ptext25 1930  
                                   __ptext17 18D2                                     __ptext18 1918  
                                   __ptext19 191C              configure_voltage_reference@_adc 006F  
                                   _btn_high 0063                        _conversion_Result_AN0 0047  
                      _conversion_Result_AN1 0045                        _conversion_Result_AN2 0043  
                      _conversion_Result_AN3 0041                                     isa$xinst 0000  
                                   int$flags 007E                             ?_MSSP_I2C_BC_ISR 006E  
                                 _INTCONbits 0FF2                        ?_InterruptManagerHigh 006E  
                                   intlevel2 0000                  __end_of_ADC_StartConversion 186A  
            __end_of_ADC_GetConversionResult 1548                   _RB4_Interrupt_Handeler_Low 0029  
                 _RB7_Interrupt_Handeler_Low 001D                               _btn_high_state 005E  
                             _port_registers 008A                                  _SSPCON1bits 0FC6  
                                _SSPCON2bits 0FC5                      _INT1_Interrupt_Handeler 002F  
               _EUSART_RX_Interrupt_Handeler 000B                      _TMR2_Interrupt_Handeler 0013  
